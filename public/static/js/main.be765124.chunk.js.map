{"version":3,"sources":["images/favicon.ico","components/NavBar.js","includes/external.js","components/DashBoard/Chart.js","context/AuthContext.js","components/DashBoard/DashBoardTable.js","components/DashBoard.js","images/package.png","images/location.png","components/Products/PDF.js","components/Products/ContentProductAdd.js","components/Products/ContentProduct.js","components/Products.js","components/ContentUserAdd.js","components/ContentUserEdit.js","components/ContentUser.js","components/Users.js","components/Users/UserLogin.js","components/Home.js","components/HeaderBar.js","components/PrivateRoute.js","components/PrivateLogin.js","images/qr-submit.png","components/QrCode.js","components/DeliveryMan/DeliveryHeader.js","components/DeliveryMan/DeliveryDashBoard.js","components/Reports/ReportDelivery.js","components/Reports/PDFShop.js","components/Reports/ReportShop.js","images/section1.1.jpg","images/section3.jpg","components/HomePage.js","components/ListAndShop/ListEdit.js","components/ListAndShop/PDFList.js","components/ListAndShop/ContentPrintList.js","components/ListAndShop/ContentShopAdd.js","components/ListAndShop/ContentShop.js","components/ListAndShop/ContentList.js","App.js","reportWebVitals.js","index.js"],"names":["Item","Menu","NavBar","title","setTitle","handleClick","e","target","innerHTML","className","defaultSelectedKeys","mode","to","src","logo","alt","icon","DesktopOutlined","onClick","CalendarOutlined","FileSearchOutlined","CarOutlined","PrinterOutlined","UserOutlined","GetColumnSearchProps","dataIndex","useState","searchText","setSearchText","searchedColumn","SetSearchedColumn","handleSearch","selectedKeys","confirm","filterDropdown","setSelectedKeys","clearFilters","style","padding","inputId","placeholder","value","onChange","onPressEnter","width","marginBottom","display","type","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","Chart","React","memo","tracker","initialValue","setInitialValue","useRef","useEffect","fetchItem","a","tgai","moment","format","axios","process","params","date","headers","localStorage","getItem","delivery_report","status","data","console","log","total_package","success","unsuccess","ongoing","total_amount","length","AuthContext","createContext","ProductContext","RoleContext","UsernameContext","Select","Option","ContentProduct","packageId","setPackageId","setDate","location","setLocation","shopPhone","setShopPhone","receiverPhone","setReceiverPhone","track","setTrack","result","allData","columns","key","sorter","b","package_id","Provider","dataSource","DashBoard","DashBoardTable","PDF","productData","service_fee","service_paid_by","check","number","id","slice","refPrint","handlePrint","useReactToPrint","content","current","ref","packagePng","shop_owner","cust_phone","cust_location","pro_price","payment_method","Form","layout","labelCol","span","wrapperCol","ContentProductAdd","setTrigger","setVisible","redirect","setRedirect","setProductData","setData","options","setOptions","setValue","codValue","setCOD","transfererValue","setTransferer","get","onFinish","values","cust_name","cod","transferer","post","message","duration","messageError","response","error","textAlign","name","label","rules","transform","trim","whitespace","required","onSelect","onSearch","regex","RegExp","sort","filter","v","test","shopName","map","min","defaultValue","TextArea","htmlType","Trigger","confirmLoading","setConfirmLoading","setModalText","datas","cancel","delete","user_id","onConfirm","onCancel","okText","cancelText","DeleteOutlined","UserAddOutlined","marginRight","onOk","setTimeout","footer","dateString","Products","ContentUserAdd","username","password","contact","onFinishFailed","errorInfo","maxLength","minLength","Password","max","ContentUserEdit","user","visible1","user_name","user_password","put","ContentUser","setUser","setVisible1","trigger","split","splice","contact_result","join","Object","assign","handleOk","EditOutlined","handleEdit","Users","useContext","loginStatus","setLoginStatus","roleStatus","setRoleStatus","UserLogin","setUsernameStatus","userNameStatus","useHistory","role","token","userId","user_log_id","setItem","opacity","LockOutlined","Home","Header","Layout","HeaderBar","menu","removeItem","LogoutOutlined","margin","overlay","placement","arrow","preventDefault","gap","DownOutlined","PrivateRoute","Component","component","auth","rest","props","PrivateLogin","QrCode","match","pro_id","product_id","delivery_id","list_id","listId","deliveryManId","package","class","bg","DeliveryHeader","DeliveryDashBoard","total","setTotal","setListId","handleCancel","handleGetList","lastIndex","ListIdBack","forEach","dataValue","fontSize","price","preStatus","parseFloat","fontWeight","others","handleTextChange","FileAddOutlined","marginTop","scroll","x","y","pagination","RangePicker","DatePicker","ReportDelivery","startDate","endDate","setDateString","deliveryName","setDeliveryName","initialStatus","setInitialStatus","start","end","Search","enterButton","report","total_success","total_unsuccess","totalAmount","PDFShop","state","reasons","prevProps","prevState","products","this","productList","deliveryManName","product","setState","shop","created_at","bordered","reason","PureComponent","ReportShop","setProductList","setStatus","setShop","count","setCount","clearRef","daily","ShopOutlined","option","DownloadOutlined","HomePage","AOS","init","once","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","borderBottom","loading","section1","data-aos","section3","visibilityHeight","UpOutlined","ListEdit","listIdPass","amount","setAmount","useForm","form","editingKey","setEditingKey","fetchTotalAmount","handleChangePayment","handleOthers","handleStatus","isEditing","save","validateFields","row","newData","index","findIndex","item","returnedTarget","push","mergedColumns","editable","_","Link","disabled","setFieldsValue","edit","col","onCell","inputType","editing","components","body","cell","children","restProps","inputNode","InputCheck","rowClassName","PDFList","listValue","ContentPrintList","setClick","reverse","ContentShopAdd","toUpperCase","shopContact","shopAddress","ContentShop","searchRef","ContentList","Content","Sider","App","collapsed","setCollapse","path","exact","theme","minHeight","collapsible","onCollapse","breakpoint","background","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be765124.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favicon.57274860.ico\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/favicon.ico\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DesktopOutlined,\n  CalendarOutlined,\n  UserOutlined,\n  FileSearchOutlined,\n  CarOutlined,\n  PrinterOutlined,\n} from \"@ant-design/icons\";\n\nconst { Item } = Menu;\n\nfunction NavBar({ title, setTitle }) {\n  const handleClick = (e) => {\n    setTitle(e.target.innerHTML);\n  };\n  return (\n    <header>\n      <nav className=\"nav-bar\">\n        <Menu defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n          {/* Logo */}\n          <div className=\"logo\">\n            <Link to=\"/\">\n              <img src={logo} alt=\"Logo\" />\n            </Link>\n          </div>\n          {/* Item */}\n          <Item key=\"1\" className=\"icon\" icon={<DesktopOutlined />}>\n            <Link to=\"/dashboard\" onClick={handleClick}>\n              Dashboard\n            </Link>\n          </Item>\n\n          <Item key=\"2\" className=\"icon\" icon={<CalendarOutlined />}>\n            <Link to=\"/products\" onClick={handleClick}>\n              Proudct\n            </Link>\n          </Item>\n\n          <Item key=\"3\" className=\"icon\" icon={<FileSearchOutlined />}>\n            <Link to=\"/reportShop\" onClick={handleClick}>\n              Report for shop\n            </Link>\n          </Item>\n\n          <Item key=\"4\" className=\"icon\" icon={<CarOutlined />}>\n            <Link to=\"/reportDelivery\" onClick={handleClick}>\n              Report for delivery\n            </Link>\n          </Item>\n\n          <Item key=\"5\" className=\"icon\" icon={<PrinterOutlined />}>\n            <Link to=\"/listAndShop\" onClick={handleClick}>\n              List And Shop\n            </Link>\n          </Item>\n\n          <Item key=\"6\" className=\"icon\" icon={<UserOutlined />} title=\"User\">\n            <Link to=\"/users\" onClick={handleClick}>\n              Users\n            </Link>\n          </Item>\n        </Menu>\n      </nav>\n    </header>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport Highlighter from \"react-highlight-words\";\nimport { Button, Space, Input, Select } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst GetColumnSearchProps = (dataIndex) => {\n  //State\n  // const [Trigger, setTrigger] = useState(false);\n  // const [initialValue, setInitialValue] = useState([]);\n  // const [visible, setVisible] = useState(false);\n  // const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  // const [confirmLoading, setConfirmLoading] = useState(false);\n  // const [modalText, setModalText] = useState(\"Content of the modal\");\n  //State for Product\n  // const [packageId, setPackageId] = useState();\n  // const [date, setDate] = useState();\n  // const [location, setLocation] = useState();\n  // const [shopPhone, setShopPhone] = useState();\n  // const [receiverPhone, setReceiverPhone] = useState();\n  // const [track,setTrack] = useState(false);\n\n  // ListEdit.js : state\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  return {\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          inputId=\"select-input\"\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  };\n};\n\n// ListEdit.js\n// const handleChangePayment = (value) => {\n//   console.log(value);\n//   setPayment(value);\n// };\n\n// const handleOthers = (e) => {\n//   console.log(e.target.value);\n// };\n// const inputType = (inputType) => {\n//   if (inputType === \"payment_method\")\n//     return <Select onChange={handleChangePayment} />;\n\n//   if (inputType === \"others\") return <Input onChange={handleOthers} />;\n//   else return <Input />;\n// };\n\nexport { GetColumnSearchProps };\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst Chart = React.memo(({ tracker }) => {\n  // State\n  const [initialValue, setInitialValue] = useState({});\n  const firstUpdate = useRef(true);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      try {\n        const tgai = moment().format(\"YYYY/M/D\");\n        const delivery_report = await axios(\n          `${process.env.REACT_APP_DOMAIN}/shop/dailyReport`,\n          {\n            params: {\n              date: tgai,\n            },\n            headers: { \"auth-token\": localStorage.getItem(\"token\") },\n          }\n        );\n\n        const status = delivery_report.data;\n        console.log(status);\n        setInitialValue(status);\n      } catch (error) {\n        setInitialValue({\n          total_package: \"0\",\n          success: \"0\",\n          unsuccess: \"0\",\n          ongoing: \"0\",\n          total_amount: \"0\",\n        });\n      }\n    };\n    // First component load not render\n    // if (firstUpdate.current) {\n    //   firstUpdate.current = false;\n    //   return;\n    // }\n    // Render component\n    // console.log(tracker[0][\"status\"]);\n    // console.log(tracker.length);\n    if (tracker.length !== 0) {\n      fetchItem();\n    } else {\n      setInitialValue({\n        total_package: \"0\",\n        success: \"0\",\n        unsuccess: \"0\",\n        ongoing: \"0\",\n        total_amount: \"0\",\n      });\n    }\n  }, []);\n  return (\n    <div className=\"container-box\">\n      <div className=\"box1\">\n        <p>DELIVERED TODAY</p>\n        <h3>{initialValue.total_package}</h3>\n      </div>\n\n      <div className=\"box2\">\n        <p>ON GOING</p>\n        <h3>{initialValue.ongoing}</h3>\n      </div>\n      <div className=\"box3\">\n        <p>SUCCESS</p>\n        <h3>{initialValue.success}</h3>\n      </div>\n      <div className=\"box4\">\n        <p>UNSUCCESS </p>\n        <h3>{initialValue.unsuccess}</h3>\n      </div>\n    </div>\n  );\n});\n\nexport default Chart;\n","import  { createContext } from \"react\";\n\nexport const AuthContext = createContext();\nexport const ProductContext = createContext();\nexport const RoleContext = createContext();\nexport const UsernameContext = createContext();\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\n\nimport {GetColumnSearchProps} from \"../../includes/external\"\nimport {\n  DatePicker,\n  Table,\n  Button,\n  Space,\n  Modal,\n  Input,\n  Popconfirm,\n  message,\n  Tooltip,\n  Select,\n} from \"antd\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SearchOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\n\n// Component\n\nimport Chart from \"../../components/DashBoard/Chart\";\nimport { ProductContext } from \"../../context/AuthContext\";\n\n\nconst { Option } = Select;\n\nfunction ContentProduct() {\n  const data = [\n    {\n      key: \"1\",\n      product_id: \"000001\",\n      shop_owner: \"Kok dara\",\n      service_paid_by: \"COD\",\n      cust_location: \"AEON2\",\n      cust_name: \"Yong\",\n      status: \"SUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"2\",\n      product_id: \"000002\",\n      shop_owner: \"totot\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout near AEON2\",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"3\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n    {\n      key: \"4\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"UNSUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n  ];\n\n\n  const dateFormat = \"YYYY/MM/DD\";\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [initialValue, setInitialValue] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n  const [track,setTrack] = useState(false);\n\n  //UseEffect\n  //Display all packages\n  useEffect(() => {\n    const fetchItem = async () => {\n      const tgai = await moment().format('YYYY/M/D');\n\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/package/countPackageByDate`,\n        { \n          params: {\n          date: tgai\n         },\n          headers: { \"auth-token\": localStorage.getItem(\"token\"),\n         \n         },\n        }\n      );\n  \n     \n\n      const allData = result.data.data;\n   \n   \n      setInitialValue(allData);\n      if (allData != []   )\n      {\n        setTrack(true);\n     \n        \n      }\n    };\n    fetchItem();\n  \n    // if (!initialValue)\n    // {\n    // }\n \n  }, []);\n\n  // Event\n  // get data after change date\n  function onChange(date, dateString) {\n\n  }\n\n  const cancel = (e) => {\n    \n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    \n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n  \n    setVisible(false);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.product_id;\n \n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `${process.env.REACT_APP_DOMAIN}/api/user/deleteuserbyid/${id}`\n      );\n    \n      setInitialValue(initialValue.filter((value) => value.user_id != id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  // searchBar\n  // const getColumnSearchProps = (dataIndex) => ({\n  //   filterDropdown: ({\n  //     setSelectedKeys,\n  //     selectedKeys,\n  //     confirm,\n  //     clearFilters,\n  //   }) => (\n  //     <div style={{ padding: 8 }}>\n  //       <Input\n  //         inputId=\"select-input\"\n  //         placeholder={`Search ${dataIndex}`}\n  //         value={selectedKeys[0]}\n  //         onChange={(e) =>\n  //           setSelectedKeys(e.target.value ? [e.target.value] : [])\n  //         }\n  //         onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n  //         style={{ width: 188, marginBottom: 8, display: \"block\" }}\n  //       />\n  //       <Space>\n  //         <Button\n  //           type=\"primary\"\n  //           onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n  //           icon={<SearchOutlined />}\n  //           size=\"small\"\n  //           style={{ width: 90 }}\n  //         >\n  //           Search\n  //         </Button>\n  //         <Button\n  //           onClick={() => handleReset(clearFilters)}\n  //           size=\"small\"\n  //           style={{ width: 90 }}\n  //         >\n  //           Reset\n  //         </Button>\n  //       </Space>\n  //     </div>\n  //   ),\n  //   filterIcon: (filtered) => (\n  //     <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n  //   ),\n  //   onFilter: (value, record) =>\n  //     record[dataIndex]\n  //       ? record[dataIndex]\n  //           .toString()\n  //           .toLowerCase()\n  //           .includes(value.toLowerCase())\n  //       : \"\",\n  //   onFilterDropdownVisibleChange: (visible) => {\n  //     if (visible) {\n  //       // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n  //     }\n  //   },\n  //   render: (text) =>\n  //     searchedColumn === dataIndex ? (\n  //       <Highlighter\n  //         highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n  //         searchWords={[searchText]}\n  //         autoEscape\n  //         textToHighlight={text ? text.toString() : \"\"}\n  //       />\n  //     ) : (\n  //       text\n  //     ),\n  // });\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"package_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...GetColumnSearchProps(\"package_id\"),\n      sorter: (a, b) => a.package_id - b.package_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>COD</strong>,\n      dataIndex: \"payment_method\",\n      key: \"payment_method\",\n    },\n\n    {\n      title: <strong>service_paid</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n    \n    {\n      title: <strong>STATUS</strong>,\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {(() => {\n            if (status === \"UNSUCCESS\")\n              return <span style={{ color: \"#ff4d4f\" }}>UNSUCCESS</span>;\n            if (status === \"ON GOING\")\n              return <span style={{ color: \"#1890ff\" }}>ON GOING</span>;\n              if (status === \"SUCCESS\")\n              return <span style={{ color: \"#52c41a\" }}>SUCCESS</span>;\n            return <span style={{ color: \"#bdc3c7\" }}>PENDING</span>;\n          })()}\n        </>\n      ),\n    },\n    // {\n    //   title: <strong>Date</strong>,\n    //   dataIndex: \"date\",\n    //   key: \"date\",\n    // },\n\n    {\n      title: <strong>Delivery By</strong>,\n      dataIndex: \"delivery_man_name\",\n      key: \"delivery_man_name\",\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n      <div>\n        { track&&\n          <Chart tracker={initialValue}/>\n        }\n        {/* Table */}\n        <Table\n          columns={columns}\n          dataSource={initialValue}\n        />\n      </div>\n    </ProductContext.Provider>\n  );\n}\n\nexport default ContentProduct;\n","import React from \"react\";\nimport DashBoardTable from \"../components/DashBoard/DashBoardTable\";\nfunction DashBoard({ title }) {\n  return (\n    <nav>\n      <DashBoardTable />\n    </nav>\n  );\n}\n\nexport default DashBoard;\n","export default __webpack_public_path__ + \"static/media/package.37db6274.png\";","export default __webpack_public_path__ + \"static/media/location.64af410c.png\";","import React, { useRef, useEffect } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { Button } from \"antd\";\nimport QRCode from \"react-qr-code\";\nimport logo from \"../../images/favicon.ico\";\nimport packagePng from \"../../images/package.png\";\nimport location from \"../../images/location.png\";\nimport moment from \"moment\";\nconst options = {\n  orientation: \"landscape\",\n  unit: \"in\",\n  format: [4, 2],\n};\nconst PDF = ({ productData, package_id }) => {\n  if (productData.service_fee === undefined) {\n    productData.service_fee = 4000;\n  }\n\n  const check = (productData) => {\n    if (productData.service_paid_by === \"Transferer\")\n      productData.service_paid_by = \"អ្នកផ្ញេី\";\n    if (productData.service_paid_by === \"Receiver\")\n      productData.service_paid_by = \"អ្នកទទួល\";\n  };\n\n  const padToEight = (number) => {\n    if (number < 9999999) {\n      number = (\"0000000\" + number).slice(-8);\n    }\n    return number;\n  };\n  // change data to khmer\n  check(productData);\n  var id = padToEight(package_id);\n\n  const refPrint = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => refPrint.current,\n  });\n\n  return (\n    <>\n      <div className=\"btnPdf-container\" ref={refPrint}>\n        {/* <ReactToPdf\n          targetRef={refPrint}\n          filename=\"qr-package.pdf\"\n          options={options}\n          //   x={0.5}\n          //   y={0.5}\n        >\n          {({ toPdf }) => <button onClick={toPdf}>Generate pdf</button>}\n        </ReactToPdf> */}\n        <div ref={refPrint} className=\"pdf-container\">\n          {/* Header */}\n          <div className=\"pdf-header\">\n            <img src={logo} alt=\"Logo\" className=\"pdf-logo\" />\n            <p>\n              {/* Change*/}\n              ID: <span>{id}</span>\n            </p>\n          </div>\n\n          {/* Body */}\n          <div className=\"pdf-information\">\n            {/* change */}\n            <p className=\"pdf-date\">\n              {moment().format(\"MMMM Do YYYY, h:mm:ss a\")}\n              {/* 2021-01-1, 12h:30m */}\n              {/* moment().format('l');    // 3/11/2021 */}\n            </p>\n            <div className=\"pdf-sender\">\n              <img src={packagePng} alt=\"package.png\" />\n              អ្នកផ្ញើ ៖{/* <pre> : </pre> */}\n              <span> {productData.shop_owner}</span>\n            </div>\n            <div className=\"pdf-receiver\">\n              <img src={location} alt=\"location.png\" />\n              អ្នកទទួល ៖{/* <pre> :</pre>{\" \"} */}\n              <span>\n                {\" \"}\n                {productData.cust_phone}, {productData.cust_location}.\n              </span>\n            </div>\n          </div>\n\n          <div className=\"pdf-price\">\n            <div className=\"pdf-priceTag\">\n              <p>តម្លៃទំនិញ</p>\n              {/* <p>តម្លៃដឹកជញ្ជួន</p> */}\n              {/* Change */}\n              <h3 className=\"price\">\n                $ {productData.pro_price}{\" \"}\n                <span className=\"product_paid_by\">\n                  ({productData.payment_method})\n                  {/* ({productData.pro_price}) */}\n                </span>{\" \"}\n              </h3>\n              {/* <h3 className=\"price\">$ {productData.service_fee} <span className=\"product_paid_by\">({productData.service_paid_by})</span> </h3> */}\n            </div>\n            <div className=\"pdf-cod\">\n              <p className=\"pdf-cod-title\">តម្លៃដឹកជញ្ជួន</p>\n              <p className=\"product_payment\">\n                ${productData.service_fee}{\" \"}\n              </p>{\" \"}\n              <p className=\"product_price\"> ({productData.service_paid_by})</p>\n            </div>\n            <figure>\n              <QRCode\n                value={`https://powergdelivery.com/qr/${package_id}`}\n                size={120}\n              />\n              <figcaption>Scan me</figcaption>\n            </figure>\n          </div>\n\n          <p className=\"pdf-website\">www.powergdelivery.com</p>\n\n          {/* <h2>shop's Owner:{productData.shop_owner}</h2>\n          <p>Location: {productData.cust_location}</p>\n          <h2>Product-ID convert to QR code</h2> */}\n        </div>\n\n        {/* <ReactToPdf\n          targetRef={refPrint}\n          filename=\"qr-package.pdf\"\n          scale={1}\n          x={30}\n          y={5}\n        >\n          {({ toPdf }) => (\n            <Button type=\"primary\" onClick={toPdf} className=\"btnPdf\">\n              Generate pdf\n            </Button>\n          )}\n        </ReactToPdf> */}\n      </div>\n      <div className=\"pdfBtnContainer\">\n        <Button type=\"primary\" onClick={handlePrint} className=\"btnPdf\">\n          Generate pdf\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default PDF;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PDF from \"./PDF\";\nimport { ProductContext } from \"../../context/AuthContext\";\nimport \"antd/dist/antd.css\";\nimport {\n  Button,\n  Form,\n  Input,\n  message,\n  Col,\n  Row,\n  Select,\n  AutoComplete,\n  InputNumber,\n} from \"antd\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nconst { Item } = Form;\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nfunction ContentProductAdd({ setTrigger, setVisible, redirect, setRedirect }) {\n  //State\n  const [productData, setProductData] = useState({});\n  const [packageId, setPackageId] = useState();\n  const [data, setData] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [serviceFee, setServiceFee] = useState(\"\");\n  const [codValue, setCOD] = useState(\"\");\n  const [transfererValue, setTransferer] = useState(\"\");\n  const [changeNumber, setChangeNumber] = useState();\n  const mockVal = (str, repeat = 1) => ({\n    value: str.repeat(repeat),\n  });\n  //UseEffect\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios.get(\n        `${process.env.REACT_APP_DOMAIN}/shop/getAllShops`,\n        {\n          headers: { \"auth-token\": localStorage.getItem(\"token\") },\n        }\n      );\n      const allData = result.data.data;\n\n      setData(allData);\n    };\n    fetchItem();\n  }, []);\n\n  const onSearch = (searchText) => {\n    setOptions(\n      !searchText\n        ? []\n        : () => {\n            const regex = new RegExp(`^${value}`, \"i\");\n            const store = data.sort().filter((v) => regex.test(v.shopName));\n\n            // setValue(store);\n            const send = store.map((data) => {\n              return {\n                value: data.shopName,\n              };\n            });\n\n            return send;\n          }\n    );\n  };\n\n  const onSelect = (data) => {};\n\n  const onChange = (data) => {\n    setValue(data);\n  };\n  const handleChange = (value) => {\n    setServiceFee(value);\n  };\n  const handleChangeCOD = (value) => {\n    setCOD(value);\n  };\n\n  const handleChangeTransferer = (value) => {\n    setTransferer(value);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onChangeNumber = (value) => {\n    console.log(value);\n    setChangeNumber(value);\n    console.log(changeNumber);\n  };\n  //Event\n  const onFinish = async (values) => {\n    const shop_owner = values.shop_owner;\n    const cust_name = values.cust_name;\n    const cust_location = values.cust_location;\n    const cust_phone = values.cust_phone;\n    const pro_price = values.pro_price;\n    var payment_method = values.payment_method;\n    // var service_fee = values.service_fee;\n    // var service_fee = serviceFee;\n    // var store_fee = serviceFee;\n    var cod = codValue;\n    var transferer = transfererValue;\n    var service_paid_by = values.service_paid_by;\n\n    // if (values.service_fee === undefined) {\n    //   //  setServiceFee(1)\n    //   store_fee = 1;\n    // }\n    if (values.service_paid_by === undefined) {\n      // service_paid_by = \"Transferer\";\n      transferer = \"Transferer\";\n    }\n    if (values.payment_method === undefined) {\n      // payment_method = \"COD\";\n      cod = \"COD\";\n    }\n\n    try {\n      const result = await axios.post(\n        `${process.env.REACT_APP_DOMAIN}/package/addpackage`,\n        {\n          shop_owner: shop_owner,\n          cust_name: cust_name,\n          cust_location: cust_location,\n          cust_phone: cust_phone,\n          pro_price: pro_price,\n          payment_method: cod,\n          service_fee: values.service_fee,\n          service_paid_by: transferer,\n        },\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n      setPackageId(result.data.package_id);\n      setTrigger(true);\n      setTrigger(false);\n      setRedirect(true);\n      setProductData({\n        shop_owner: shop_owner,\n        cust_name: cust_name,\n        cust_location: cust_location,\n        cust_phone: cust_phone,\n        pro_price: pro_price,\n        payment_method: cod,\n        service_fee: values.service_fee,\n        service_paid_by: transferer,\n      });\n      // setVisible(false);\n    } catch (error) {\n      const messageError = error.response.data.message;\n\n      message.error({\n        content: \"this \" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n  return (\n    <div>\n      {!redirect ? (\n        <Form\n          // onSubmit={handleSubmit}\n          {...layout}\n          onFinish={onFinish}\n          // onFinishFailed={onFinishFailed}\n          style={{ textAlign: \"center\" }}\n        >\n          {/* Username */}\n          <Item\n            name={\"shop_owner\"}\n            label=\"Shop_owner\"\n            rules={[\n              { transform: (value) => value.trim() },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n              {\n                required: true,\n                message: \"Please input your shop_owner!\",\n              },\n            ]}\n          >\n            {/* <Input /> */}\n            <AutoComplete\n              options={options}\n              onSelect={onSelect}\n              onSearch={onSearch}\n              onChange={onChange}\n              placeholder=\"Input here\"\n            />\n            {/* {data.map((data) => {\n                <Option key={data.id} value={data.value}>\n                  {data.shopName}\n                </Option>;\n              })} */}\n\n            {/* {options.map((option) => (\n              <Option key={option.id} value={option.value}>\n                {option.shopName}\n              </Option>\n            ))} */}\n          </Item>\n\n          {/* Password */}\n          <Item\n            name={\"cust_name\"}\n            label=\"Customer's name\"\n            rules={[\n              {\n                required: true,\n                message: \"please input your customer name!\",\n              },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n\n          <Item\n            name={\"cust_phone\"}\n            label=\"Customer's Phone\"\n            rules={[\n              {\n                required: true,\n                message: \"please input your customer name!\",\n              },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n\n          <Item\n            name={\"pro_price\"}\n            label=\"Pro_Price ($)\"\n            rules={[\n              {\n                required: true,\n                message: \"please input your product price!\",\n              },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n\n          <Item\n            name={\"service_fee\"}\n            label=\"service_fee ($)\"\n            style={{ textAlign: \"left\" }}\n            rules={\n              [\n                // {\n                //   required: true,\n                //   message: \"please input your servie_fee!\",\n                // },\n                // {\n                //   whitespace: true,\n                //   message: \"No whitespace\",\n                // },\n              ]\n            }\n          >\n            {/* <Select\n              defaultValue=\"1\"\n              style={{ width: 116 }}\n              onChange={handleChange}\n            >\n              <Option value=\"1\">1</Option>\n              <Option value=\"1.25\">1.25</Option>\n            </Select> */}\n            <InputNumber min={1} />\n          </Item>\n\n          <Item\n            name={\"service_paid_by\"}\n            label=\"service_paid_by\"\n            rules={[\n              // {\n              //   required: true,\n              //   message: \"please input your servie_paid_by!\",\n              // },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n            style={{ textAlign: \"left\" }}\n          >\n            <Select\n              defaultValue=\"Transferer\"\n              style={{ width: 116 }}\n              onChange={handleChangeTransferer}\n            >\n              <Option value=\"Transferer\">Transferer</Option>\n              <Option value=\"Receiver\">Receiver</Option>\n            </Select>\n          </Item>\n          <Item\n            style={{ textAlign: \"left\" }}\n            name={\"payment_method\"}\n            label=\"payment_method\"\n            rules={[\n              // {\n              //   required: true,\n              //   message: \"please input your payment_method!\",\n              // },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            {/* <Input /> */}\n            <Select\n              defaultValue=\"COD\"\n              style={{ width: 116 }}\n              onChange={handleChangeCOD}\n            >\n              <Option value=\"COD\">COD</Option>\n              <Option value=\"Paid\">Paid</Option>\n            </Select>\n          </Item>\n\n          <Item\n            label=\"Location\"\n            style={{ textAlign: \"left\" }}\n            rules={[\n              {\n                required: true,\n                message: \"please input location!\",\n              },\n            ]}\n            name={\"cust_location\"}\n          >\n            <Input.TextArea />\n          </Item>\n\n          {/* Submit */}\n          <Item className=\"footerAddUser\">\n            <Button className=\"btnSubmitUser\" type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n            <Button type=\"default\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          </Item>\n        </Form>\n      ) : (\n        <PDF productData={productData} package_id={packageId} />\n      )}\n    </div>\n  );\n}\n\nexport default ContentProductAdd;\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport { GetColumnSearchProps } from \"../../includes/external\";\nimport {\n  DatePicker,\n  Table,\n  Button,\n  Space,\n  Modal,\n  Input,\n  Popconfirm,\n  message,\n  Tooltip,\n} from \"antd\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SearchOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\n\n// Component\nimport ContentProductAdd from \"../Products/ContentProductAdd\";\nimport { ProductContext } from \"../../context/AuthContext\";\n\nfunction ContentProduct() {\n  const dateFormat = \"YYYY/M/D\";\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [initialValue, setInitialValue] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  const [redirect, setRedirect] = useState(false);\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n\n  //UseEffect\n  //Display all packages\n  useEffect(() => {\n    const fetchItem = async () => {\n      const tgai = moment().format(\"YYYY/M/D\");\n      // console.log(tgai);\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/package/getAllPackageByDate`,\n\n        {\n          params: {\n            date: tgai,\n          },\n          headers: { \"auth-token\": localStorage.getItem(\"token\") },\n        }\n      );\n\n      const datas = result.data.data;\n      // console.log(datas);\n      setInitialValue(datas);\n    };\n    fetchItem();\n  }, [Trigger]);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/package/getAllPackageByDate`,\n        {\n          params: {\n            date: date,\n          },\n          headers: { \"auth-token\": localStorage.getItem(\"token\") },\n        }\n      );\n\n      const datas = result.data.data;\n      setInitialValue(datas);\n    };\n\n    if (date !== undefined) {\n      fetchItem();\n    }\n  }, [date]);\n\n  // Event\n  // get data after change date\n  function onChange(date, dateString) {\n    setDate(dateString);\n  }\n\n  const cancel = (e) => {\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.package_id;\n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `${process.env.REACT_APP_DOMAIN}/package/deletePackageById/${id}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      setInitialValue(initialValue.filter((value) => value.user_id != id));\n      // setTrigger(!Trigger? true:false);\n      setTrigger(true);\n      setTrigger(false);\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  // searchBar\n  // const getColumnSearchProps = (dataIndex) => ({\n  //   filterDropdown: ({\n  //     setSelectedKeys,\n  //     selectedKeys,\n  //     confirm,\n  //     clearFilters,\n  //   }) => (\n  //     <div style={{ padding: 8 }}>\n  //       <Input\n  //         inputId=\"select-input\"\n  //         placeholder={`Search ${dataIndex}`}\n  //         value={selectedKeys[0]}\n  //         onChange={(e) =>\n  //           setSelectedKeys(e.target.value ? [e.target.value] : [])\n  //         }\n  //         onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n  //         style={{ width: 188, marginBottom: 8, display: \"block\" }}\n  //       />\n  //       <Space>\n  //         <Button\n  //           type=\"primary\"\n  //           onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n  //           icon={<SearchOutlined />}\n  //           size=\"small\"\n  //           style={{ width: 90 }}\n  //         >\n  //           Search\n  //         </Button>\n  //         <Button\n  //           onClick={() => handleReset(clearFilters)}\n  //           size=\"small\"\n  //           style={{ width: 90 }}\n  //         >\n  //           Reset\n  //         </Button>\n  //       </Space>\n  //     </div>\n  //   ),\n  //   filterIcon: (filtered) => (\n  //     <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n  //   ),\n  //   onFilter: (value, record) =>\n  //     record[dataIndex]\n  //       ? record[dataIndex]\n  //           .toString()\n  //           .toLowerCase()\n  //           .includes(value.toLowerCase())\n  //       : \"\",\n  //   onFilterDropdownVisibleChange: (visible) => {\n  //     if (visible) {\n  //       // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n  //     }\n  //   },\n  //   render: (text) =>\n  //     searchedColumn === dataIndex ? (\n  //       <Highlighter\n  //         highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n  //         searchWords={[searchText]}\n  //         autoEscape\n  //         textToHighlight={text ? text.toString() : \"\"}\n  //       />\n  //     ) : (\n  //       text\n  //     ),\n  // });\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n    setRedirect(false);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"package_id\",\n      key: \"package_id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...GetColumnSearchProps(\"package_id\"),\n      sorter: (a, b) => a.package_id - b.package_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>Price</strong>,\n      dataIndex: \"pro_price\",\n      key: \"pro_price\",\n    },\n\n    {\n      title: <strong> Fee</strong>,\n      dataIndex: \"service_fee\",\n      key: \"service_fee\",\n    },\n    {\n      title: <strong> Service</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n    {\n      title: <strong> Method</strong>,\n      dataIndex: \"payment_method\",\n      key: \"payment_method\",\n    },\n    {\n      title: <strong> Contact</strong>,\n      dataIndex: \"cust_phone\",\n      key: \"cust_phone\",\n    },\n    {\n      title: <strong>Location</strong>,\n      dataIndex: \"cust_location\",\n      key: \"cust_location\",\n      className: \"pro-location\",\n    },\n\n    {\n      title: <strong>Date</strong>,\n      dataIndex: \"created_at\",\n      key: \"date\",\n    },\n\n    {\n      title: <strong>ACTION</strong>,\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          // const editable = isEditing(record);\n          <Space size=\"middle\">\n            <Popconfirm\n              title=\"Are you sure to delete this package?\"\n              onConfirm={() => {\n                confirm(record);\n              }}\n              onCancel={cancel}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button\n                className=\"noOutLine removeUser\"\n                icon={<DeleteOutlined />}\n              ></Button>\n            </Popconfirm>\n          </Space>\n        );\n      },\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        // setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n      {initialValue && (\n        <div>\n          {/* ADD*/}\n\n          <Button\n            className=\"userAdd \"\n            icon={<UserAddOutlined />}\n            onClick={showModal}\n            style={{ marginRight: \"3rem\" }}\n          >\n            ADD\n          </Button>\n          <Modal\n            title=\"Add New Product\"\n            visible={visible}\n            onOk={handleOk}\n            confirmLoading={confirmLoading}\n            footer={null}\n            onCancel={handleCancel}\n            width={800}\n          >\n            <ContentProductAdd\n              setVisible={setVisible}\n              initialValue={initialValue}\n              setInitialValue={setInitialValue}\n              setTrigger={setTrigger}\n              redirect={redirect}\n              setRedirect={setRedirect}\n            />\n          </Modal>\n\n          <DatePicker\n            defaultValue={moment()}\n            format={dateFormat}\n            onChange={onChange}\n            className=\"date\"\n          />\n          {/* Table */}\n          <Table\n            columns={columns}\n            /* dataSource={data} */ dataSource={initialValue}\n          />\n        </div>\n      )}\n    </ProductContext.Provider>\n  );\n}\n\nexport default ContentProduct;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ContentProduct from \"../components/Products/ContentProduct\";\nfunction Products() {\n  return (\n    <nav>\n      <ContentProduct />\n    </nav>\n  );\n}\n\nexport default Products;\n","import React from \"react\";\nimport { Button, Form, Input, message } from \"antd\";\n\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nconst { Item } = Form;\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nfunction ContentUserAdd({\n  setVisible,\n\n  setTrigger,\n}) {\n  const onFinish = async (values) => {\n    const username = values.username;\n    const password = values.password;\n    const contact = values.contact;\n    try {\n      const result = await axios.post(\n        `${process.env.REACT_APP_DOMAIN}/api/user/register`,\n        {\n          name: username,\n          password: password,\n          contact: contact,\n        },\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      console.log(result.data.message);\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n      setVisible(false);\n      setTrigger(true);\n      setTrigger(false);\n    } catch (error) {\n      const messageError = error.response.data.message;\n\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n  // EventHandler\n  const onFinishFailed = (errorInfo) => {};\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Form\n        // onSubmit={handleSubmit}\n        {...layout}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        style={{ textAlign: \"center\" }}\n      >\n        {/* Username */}\n        <Item\n          name={\"username\"}\n          label=\"Username\"\n          rules={[\n            { transform: (value) => value.trim() },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n            {\n              min: 6,\n              message: \"Username must contain 6 letters\",\n            },\n          ]}\n        >\n          <Input />\n        </Item>\n\n        {/* Password */}\n        <Item\n          name={\"password\"}\n          label=\"Password\"\n          maxLength={20}\n          minLength={6}\n          rules={[\n            {\n              required: true,\n              message: \"please input your password!\",\n            },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Item>\n        {/* Contact */}\n\n        <Item\n          label=\"Contact\"\n          style={{ textAlign: \"left\" }}\n          rules={[\n            {\n              required: true,\n              message: \"please input your phone number!\",\n            },\n            {\n              max: 10,\n              message: \"No exceed 10 digit\",\n            },\n            {\n              min: 9,\n              message: \"At least 9 digit\",\n            },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n          ]}\n          maxLength={10}\n          name={\"contact\"}\n        >\n          <Input />\n        </Item>\n\n        {/* Submit */}\n        <Item className=\"footerAddUser\">\n          <Button className=\"btnSubmitUser\" type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"default\" onClick={handleCancel}>\n            Cancel\n          </Button>\n        </Item>\n      </Form>\n    </>\n  );\n}\n\nexport default ContentUserAdd;\n","import React from \"react\";\nimport { Button, Form, Input, message } from \"antd\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nconst { Item } = Form;\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst ContentUserEdit = ({ setVisible, user, visible1, setTrigger }) => {\n  // Object\n  const { user_name, user_password, contact } = user;\n  const id = user.user_id;\n\n  // State\n  // const [userValue, setUserValue] = useState({\n  //   name: user_name,\n  //   password: user_password,\n  //   contact: contact,\n  // });\n\n  // EventHandler\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onFinish = async (values) => {\n    try {\n      const username = values.username;\n      const password = values.password;\n      const contact = values.contact;\n\n      const result = await axios.put(\n        `${process.env.REACT_APP_DOMAIN}/api/user/updateinfo/${id}`,\n        {\n          name: username,\n          password: password,\n          contact: contact,\n        },\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n\n        // { headers: { \"Access-Control-Allow-Origin\": \"*\" } }\n      );\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n      setTrigger(true);\n      setTrigger(false);\n      setVisible(false);\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Form\n        // onSubmit={handleSubmit}\n        {...layout}\n        onFinish={onFinish}\n        // onFinishFailed={onFinishFailed}\n        style={{ textAlign: \"center\" }}\n        // initialValues={{ username: user_name, contact: contact }}\n      >\n        {/* Username */}\n        <Item\n          name={\"username\"}\n          label=\"Username\"\n          rules={[\n            {\n              required: true,\n            },\n            {\n              min: 6,\n              message: \"Username must contain 6 letters\",\n            },\n          ]}\n        >\n          <Input\n            defaultValue={user_name}\n            // value=\"sadsad\"\n            // onChange={(e) => setUserValue({ username: e.target.value })}\n            key={id}\n            placeholder=\"username\"\n          />\n        </Item>\n\n        {/* Password */}\n        <Item\n          name={\"password\"}\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input.Password key={id} placeholder=\"***********\" />\n        </Item>\n        {/* Contact */}\n        <Item\n          name={\"contact\"}\n          label=\"Contact\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your contact!\",\n            },\n            {\n              max: 10,\n              message: \"No exceed 10 digit\",\n            },\n            {\n              min: 9,\n              message: \"At least 9 digit\",\n            },\n          ]}\n        >\n          <Input defaultValue={contact} key={id} placeholder=\"0123928472\" />\n        </Item>\n\n        {/* Submit */}\n        <Item className=\"footerAddUser\">\n          <Button className=\"btnSubmitUser\" type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"default\" onClick={handleCancel}>\n            Cancel\n          </Button>\n        </Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ContentUserEdit;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Table, Button, Space, Modal, Input, Popconfirm, message } from \"antd\";\nimport {GetColumnSearchProps} from \"../includes/external\"\nimport axios from \"axios\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\n// Component;\nimport ContentUserAdd from \"../components/ContentUserAdd\";\nimport ContentUserEdit from \"../components/ContentUserEdit\";\n\nfunction ContentUser() {\n  // useRef\n  const searchRef = useRef(null);\n\n  // State\n  const [initialValue, setInitialValue] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  // const [searchInput, setSearchInput] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [trigger, setTrigger] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`${process.env.REACT_APP_DOMAIN}/api/user/getallusers`, {\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      });\n    \n      const allData = result.data.data;\n      const datas = allData.map((data) => {\n        const contact = data.contact.split(\"\");\n        contact.splice(3, 0, \"  \");\n        contact.splice(7, 0, \"  \");\n        const contact_result = contact.join(\"\");\n        \n        const object = Object.assign({}, data, { contact: contact_result });\n        return object;\n      });\n      setInitialValue(datas);\n    };\n    fetchItem();\n   \n  }, []);\n\n  // Fetch data again we anything change\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/api/user/getallusers`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      const allData = result.data.data;\n      const datas = allData.map((data) => {\n        const contact = data.contact.split(\"\");\n        contact.splice(3, 0, \"  \");\n        contact.splice(7, 0, \"  \");\n        const contact_result = contact.join(\"\");\n        const object = Object.assign({}, data, { contact: contact_result });\n        return object;\n      });\n      setInitialValue(datas);\n    };\n    fetchItem();\n\n  }, [trigger]);\n\n  \n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const showModal1 = () => {\n    setVisible1(true);\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n \n    setVisible(false);\n  };\n\n  const handleCancel1 = () => {\n \n    setVisible1(false);\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    setUser(record);\n\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.user_id;\n   \n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `${process.env.REACT_APP_DOMAIN}/api/user/deleteuserbyid/${id}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      \n      setInitialValue(initialValue.filter((value) => value.user_id !== id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  const cancel = (e) => {\n   \n    message.error(\"Click on No\");\n  };\n\n  // function refreshPage() {\n  //   window.location.reload();\n  // }\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"user_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...GetColumnSearchProps(\"user_id\"),\n      sorter: (a, b) => a.user_id - b.user_id,\n    },\n    {\n      title: <strong>USERNAME</strong>,\n      dataIndex: \"user_name\",\n      key: \"user_name\",\n      className: \"col-username\",\n      ...GetColumnSearchProps(\"user_name\"),\n    },\n    // {\n    //   title: <strong>PASSWORD</strong>,\n    //   dataIndex: \"user_password\",\n    //   key: \"user_password\",\n    // },\n    {\n      title: <strong>CONTACT</strong>,\n      dataIndex: \"contact\",\n      key: \"user_contact\",\n    },\n    {\n      title: <strong>ACTION</strong>,\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          // const editable = isEditing(record);\n          <Space size=\"middle\">\n            <Popconfirm\n              title=\"Are you sure to delete this user?\"\n              onConfirm={() => {\n                confirm(record);\n              }}\n              onCancel={cancel}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button\n                className=\"noOutLine removeUser\"\n                icon={<DeleteOutlined />}\n              ></Button>\n            </Popconfirm>\n\n            <Button\n              className=\"noOutLine editUser\"\n              icon={<EditOutlined />}\n              // onClick={() => handleEdit(text, record)}\n              onClick={() => {\n                handleEdit(record);\n              }}\n            ></Button>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  //  Data\n  return (\n    <>\n      {/* Refresh Button */}\n      {/* <Button\n        className=\"userRefreshPage\"\n        icon={<SyncOutlined />}\n        onClick={refreshPage}\n        type=\"primary\"\n      >\n        Refresh\n      </Button> */}\n      <Button\n        className=\"userAdd \"\n        icon={<UserAddOutlined />}\n        onClick={showModal}\n        // style={{marginRight:\"3.1rem\"}}\n      >\n        ADD\n      </Button>\n      {/* Table */}\n      <Table columns={columns} dataSource={initialValue} />\n\n      {/* ADD*/}\n      <Modal\n        title=\"Add New User\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <ContentUserAdd\n          setVisible={setVisible}\n          initialValue={initialValue}\n          setInitialValue={setInitialValue}\n          setTrigger={setTrigger}\n        />\n      </Modal>\n\n      {/* Edit */}\n      <Modal\n        title=\"Edit User\"\n        visible={visible1}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel1}\n      >\n        <ContentUserEdit\n          setVisible={setVisible1}\n          user={user}\n          visible1={visible1}\n          setTrigger={setTrigger}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default ContentUser;\n","import React, { useContext } from \"react\";\nimport ContentUser from \"./ContentUser\";\nimport { AuthContext, RoleContext } from \"../context/AuthContext\";\nfunction Users() {\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n\n  const handleLogout = () => {\n    setLoginStatus(false);\n    setRoleStatus(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"u_role\");\n  };\n  return (\n    <nav>\n      <ContentUser />\n    </nav>\n  );\n}\n\nexport default Users;\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nimport logo from \"../../images/favicon.ico\";\nimport { Button, Form, Input, message } from \"antd\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"../../context/AuthContext\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { Item } = Form;\n\nexport const UserLogin = () => {\n  // State\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  const { userNameStatus, setUsernameStatus } = useContext(UsernameContext);\n  let history = useHistory();\n  // EventHandler\n  const onFinish = async (values) => {\n    const { username, password } = values;\n    try {\n      const result = await axios.post(\n        `${process.env.REACT_APP_DOMAIN}/api/user/login`,\n        {\n          name: username,\n          password: password,\n        }\n      );\n      // console.log(\"result\", result);\n      const role = result.data.role;\n      // console.log(\"role\", role);\n      const token = result.data.token;\n      const userId = result.data.user_log_id;\n      console.log(token);\n      setLoginStatus(true);\n      setRoleStatus(role);\n      setUsernameStatus(username);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"u_role\", role);\n      localStorage.setItem(\"u_id\", userId);\n      localStorage.setItem(\"u_username\", username);\n      // history.push(\"/dashboard\");\n    } catch (error) {\n      console.log(error.response);\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n      setLoginStatus(false);\n    }\n  };\n  return (\n    <div className=\"cover\">\n      <div className=\"userContainer\">\n        {/* Logo */}\n        <div className=\"userLogo\">\n          <img src={logo} alt=\"Logo\" />\n        </div>\n        {/* Form */}\n\n        <Form\n          onFinish={onFinish}\n          //   onFinishFailed={onFinishFailed}\n          className=\"FormCard\"\n        >\n          {/*Username*/}\n          <Item\n            name={\"username\"}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your username!\",\n              },\n            ]}\n          >\n            <Input\n              placeholder=\"default size\"\n              placeholder=\"Username\"\n              prefix={\n                <UserOutlined style={{ color: \"gray\", opacity: \"50%\" }} />\n              }\n              className=\"userInput\"\n            />\n          </Item>\n          {/*Password*/}\n          <Item\n            name={\"password\"}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password\n              placeholder=\"default size\"\n              placeholder=\"Password\"\n              prefix={\n                <LockOutlined style={{ color: \"gray\", opacity: \"50%\" }} />\n              }\n              className=\"userInput\"\n            />\n          </Item>\n\n          {/* Submit */}\n          <Item className=\"userSubmit\">\n            <Button htmlType=\"submit\" className=\"userSubmitButton\">\n              LOG IN\n            </Button>\n          </Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\n// export default UserLogin;\n","import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router\";\nimport { RoleContext } from \"../context/AuthContext\";\n// Component\nimport { UserLogin } from \"./Users/UserLogin\";\nfunction Home() {\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  return (\n    <nav>\n      <UserLogin />\n    </nav>\n  );\n}\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport { Layout } from \"antd\";\nimport { Avatar, Menu, Dropdown } from \"antd\";\nimport { UserOutlined, DownOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"../context/AuthContext\";\nconst { Header } = Layout;\nfunction HeaderBar({ title }) {\n  //State\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  const { userNameStatus, setUsernameStatus } = useContext(UsernameContext);\n  // Event\n  const handleLogout = () => {\n    setLoginStatus(false);\n    setRoleStatus(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"u_role\");\n  };\n  // menu for dropdown avatar\n  const menu = (\n    <Menu className=\"admin-avatar\">\n      <Menu.Item onClick={handleLogout} icon={<LogoutOutlined />}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Header className=\"headerBar-container\">\n      <h5 style={{ margin: \"0\" }}>{title}</h5>\n      <div className=\"deliveryMan\">\n        <Dropdown overlay={menu} placement={\"topRight\"} arrow={true}>\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n            <Avatar\n              style={{\n                backgroundColor: \"#F05454\",\n                marginRight: \"0.5rem\",\n              }}\n              alt=\"user Avatar\"\n              icon={<UserOutlined />}\n              gap={30}\n              size=\"small\"\n            />\n            <span className=\"headerName\">{userNameStatus}</span>\n            <DownOutlined />\n          </a>\n        </Dropdown>\n      </div>\n    </Header>\n  );\n}\n\nexport default HeaderBar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth === true ? <Component {...props} /> : <Redirect to=\"/\" />\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nconst PrivateLogin = ({ component: Component, auth, role, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      if (auth === false) {\n        return <Component {...props} />;\n      } else if (role === \"user\") {\n        return <Redirect to=\"/delivery\" />;\n      } else if (role === \"admin\") {\n        return <Redirect to=\"/dashboard\" />;\n      }\n    }}\n  />\n);\n\nexport default PrivateLogin;\n","export default __webpack_public_path__ + \"static/media/qr-submit.2278c7e1.png\";","import React, { useEffect } from \"react\";\nimport { Link} from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"../images/favicon.ico\";\nimport bg from \"../images/qr-submit.png\";\n\nimport { Button, Form, Input, message } from \"antd\";\nconst { Item } = Form;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n\n  // wrapperCol: {\n  //   span: 5,\n  // },\n};\nfunction QrCode({ match }) {\n  const pro_id = match.params.pro_id;\n  const user_id = localStorage.getItem(\"u_id\");\n\n  useEffect(() => {}, []);\n\n  const handleCancel = () => {\n   \n    // setVisible(false);\n  };\n  //Event\n  const onFinish = async (values) => {\n    // const shop_owner = values.shop_owner;\n    if (values.product_id === undefined) {\n      var pro_id = match.params.pro_id;\n    }\n    if (values.delivery_id === undefined) {\n      var user_id = localStorage.getItem(\"u_id\");\n    }\n\n    const list_id = localStorage.getItem(\"listId\");\n   \n    // if (!list_id) {\n    //   message.error({\n    //     content: \"\" + \"Please create a list before you scan\",\n    //     duration: 5,\n    //     className: \"UserErrorMessage\",\n    //   });\n    //   return;\n    // }\n    try {\n      const result = await axios.post(\n        `${process.env.REACT_APP_DOMAIN}/packageList/addList`,\n        {\n          listId: list_id,\n          deliveryManId: user_id,\n          package: pro_id,\n        },\n        { headers: { \"Access-Control-Allow-Origin\": \"*\" } }\n      );\n      if (!list_id) {\n        localStorage.setItem(\"listId\", result.data.listId);\n        \n      }\n\n      // localStorage.setItem(\"listId\", listId);\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n\n      // setVisible(false);\n    } catch (error) {\n      \n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n  return (\n    <div className=\"qr-cover\">\n      <div className=\"userContainer\">\n        \n        {/* Logo */}\n        <div className=\"qr-code-logo\">\n          <div class=\"iconQR icons-list \">\n          {/* <LeftOutlined  class=\"iconQR-icon\"/>  */}\n          {/* <Button className=\" backQR\" icon={<LeftOutlined/>}>\n              \n          </Button> */}\n          </div>\n\n        {/* <HomeOutlined /> */}\n          <Link to=\"/\">\n            <img src={logo} alt=\"Logo\" />\n          </Link>\n          <h5 className=\"khmer-font\">បញ្ចាក់ការដឹក</h5>\n        </div>\n        {/* Form */}\n        <Form\n          onFinish={onFinish}\n          {...layout}\n          //   onFinishFailed={onFinishFailed}\n          className=\"FormCard\"\n        >\n          {/* Package'Id*/}\n          <Item\n            name={\"product_id\"}\n            label=\"Package's Id:\"\n            className=\"disabledByMe\"\n            rules={[\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input defaultValue={pro_id} />\n          </Item>\n\n          {/*  DeliveryMan'Id */}\n          <Item\n            name={\"delivery_id\"}\n            label=\"Delivery man's Id:\"\n            className=\"disabledByMe\"\n            rules={[\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input defaultValue={user_id} />\n          </Item>\n\n          {/* Submit */}\n          <Item className=\"userSubmit\">\n            <Button htmlType=\"submit\" className=\"userSubmitButton\">\n              Submit\n            </Button>\n            {/* <Button className=\" backQR\" icon={<LeftOutlined/>}>\n                back\n            </Button> */}\n          </Item>\n        </Form>\n      </div>\n      <img src={bg} alt=\"background\" className=\"bg\" />\n    </div>\n  );\n}\n\nexport default QrCode;\n\n","import React, { useContext } from \"react\";\nimport logo from \"../../images/favicon.ico\";\nimport { Avatar, Menu, Dropdown, Button } from \"antd\";\nimport { UserOutlined, DownOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"../../context/AuthContext\";\nimport moment from \"moment\";\n\nfunction DeliveryHeader() {\n  //State\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  const { userNameStatus, setUsernameStatus } = useContext(UsernameContext);\n  const listId = localStorage.getItem(\"listId\");\n  const handleLogout = () => {\n    setLoginStatus(false);\n    setRoleStatus(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"u_role\");\n    localStorage.removeItem(\"listId\");\n    localStorage.removeItem(\"u_id\");\n    localStorage.removeItem(\"u_username\");\n  };\n  // menu for dropdown avatar\n  const menu = (\n    <Menu className=\"deliveryLogOut\">\n      <Menu.Item onClick={handleLogout} icon={<LogoutOutlined />}>\n        Logout\n      </Menu.Item>\n    </Menu>\n    // <Menu>\n    //   <Menu.Item>\n    //     <Button onClick={handleLogout}>Logout1</Button>\n    //   </Menu.Item>\n    // </Menu>\n  );\n  return (\n    <header className=\"header\">\n      <div className=\"header-bar\">\n        <img src={logo} alt=\"logo\" className=\"delivery-logo\" />\n        <div className=\"deliveryMan\">\n          <Dropdown overlay={menu} placement={\"topRight\"} arrow={true}>\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Avatar\n                style={{\n                  backgroundColor: \"#F05454\",\n                  marginRight: \"0.5rem\",\n                }}\n                alt=\"user Avatar\"\n                icon={<UserOutlined />}\n                gap={30}\n                size=\"small\"\n              />\n              <span className=\"name\">{userNameStatus}</span>\n              <DownOutlined />\n            </a>\n          </Dropdown>\n        </div>\n      </div>\n      {/* <p className=\"deliveryDate\">{ moment().format('YYYY/MMMM/D')}</p> */}\n      <p className=\"deliveryDate\">{moment().format('YYYY/M/D')}</p>\n\n      <div className=\"listId\">#{listId}</div>\n    </header>\n  );\n}\n\nexport default DeliveryHeader;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Form, Table, Select, Button, message, Input, Modal } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport DeliveryHeader from \"../DeliveryMan/DeliveryHeader\";\nimport axios from \"axios\";\n// import { getAllByDisplayValue } from \"@testing-library/dom\";\nimport { FileAddOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\nconst { Item } = Form;\nfunction DeliveryDashBoard() {\n  // state\n  const [total, setTotal] = useState(0);\n  const [listId, setListId] = useState();\n  const [initialValue, setInitialValue] = useState([]);\n  const [trigger, setTrigger] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  const [dataListId, setDataListId] = useState(\"\");\n  // useRef\n  const ListIdRef = useRef(null);\n  const dateFormat = \"YYYY/M/D\";\n\n  //UseEffect\n  useEffect(() => {\n    const listId = localStorage.getItem(\"listId\");\n    setListId(listId);\n    const fetchItem = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/packageList/getListById/${listId}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n     \n      const allData = result.data.data;\n      setInitialValue(allData);\n    };\n    if(listId)\n      fetchItem();\n  }, [listId]);\n\n \n  const hide = () => {\n    setVisible(false);\n  };\n  const handleVisibleChange = (visible) => {\n\n    setVisible(visible);\n\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n   \n    setVisible(false);\n  };\n\n  // Function to get ListId \n  const handleGetList = async() => {\n\n\n    const tgai = await moment().format('YYYY/M/D');\n    const name = localStorage.getItem('u_username');\n    const id = localStorage.getItem('u_id');\n  \n    try {\n      const result = await axios.get(`${process.env.REACT_APP_DOMAIN}/packageList/getListByDateId`,\n          {\n            headers: { \"auth-token\": localStorage.getItem(\"token\") },\n            params: {\n              date: tgai,\n              id:id,\n              name:name\n             },\n          }\n      )\n\n      const lastIndex = result.data.data.length - 1\n    \n      const ListIdBack = result.data.data[lastIndex].listId\n      setListId(ListIdBack);\n      localStorage.setItem('listId', ListIdBack);\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n\n    } catch (error) {\n      message.error({\n        content: \"\" + 'Can not get list',\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  }\n\n  const handleClickList = () => {\n      if (listId) {\n        message.error({\n          content: \"\" + 'u have already generate list',\n          className: \"UserErrorMessage\",\n          duration: 5,\n        });\n        return;\n      }\n      else {\n        handleGetList();\n      }\n  }\n\n\n  const handleTextChange = (e,record) => {\n \n    // update messaget to data\n    record.others = e.target.value;\n   \n  }\n\n  function checkStatus(values) {\n    values.forEach((value) => {\n      if (value.status === \"ON GOING\") {\n      \n\n        throw {\n          response: {\n            data: {\n              message: \"please change all status whether success or unsuccess\",\n            },\n          },\n        };\n      }\n    });\n  }\n  const onFinish = async () => {\n    try {\n     \n      checkStatus(initialValue);\n      if (!localStorage.getItem(\"listId\")) {\n        throw {\n          response: {\n            data: {\n              message: \"please scan product in order to create list\",\n            },\n          },\n        };\n      }\n      const dataValue = initialValue\n     \n      const result = await axios.post(\n        `${process.env.REACT_APP_DOMAIN}/package/finalUpdate`,\n        {\n          listId: listId,\n          data: dataValue\n        },\n        // {\n        //   listId:listId,\n        //   data:data\n        // },\n        // dataValue,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n     \n      localStorage.removeItem(\"listId\");\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  const onFinishFailed = () => {\n    message.error({\n      content: \"\" + \"failed\",\n    });\n  };\n  const columns = [\n    {\n      title: \"PRODUCT ID\",\n      dataIndex: \"package_id\",\n      key: \"package_id\",\n      className: \"columns\",\n      render: (text) => <a>{text}</a>,\n    },\n\n    {\n      title: \"STATUS\",\n      dataIndex: \"status\",\n      key: \"status\",\n      className: \"columns\",\n\n      // Testing\n      render: (text, record) => {\n    \n        if (record.status === \"ON GOING\") {\n       \n          return (\n            <>\n              <Select\n                style={{\n                  width: 100,\n                  color: \"#bdc3c7\",\n                  fontSize: \"0.6rem\",\n                }}\n                defaultValue=\"ON GOING\"\n                // ref={statusRef}\n                onChange={(value) => {\n                  // handleChange(text, record);\n                \n                  // Set key to state\n                  // setKeyIndex(record.key);\n                  const preStatus = record.status;\n                  \n                  var price;\n\n                  if (value === \"SUCCESS\") {\n                    price = parseFloat(record.price);\n                \n                    setTotal(total + price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n                  if (value === \"UNSUCCESS\") {\n                    trigger ? setTrigger(false) : setTrigger(true);\n                    // trigger === true ? setTrigger(false) : setTrigger(true);\n                  }\n                  if (preStatus === \"SUCCESS\" && value === \"UNSUCCESS\") {\n                    price = parseFloat(record.price);\n                   \n                    setTotal(total - price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n                  if (preStatus === \"SUCCESS\" && value === \"ON GOING\") {\n                    price = parseFloat(record.price);\n                    setTotal(total - price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n               \n                  // Change status to data\n                  record.status = value;\n                }}\n              >\n                <Option\n                  value=\"ON GOING\"\n                  style={{\n                    color: \"#bdc3c7\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  ON GOING\n                </Option>\n                <Option\n                  value=\"SUCCESS\"\n                  // className=\"SUCCESS\"\n                  style={{\n                    color: \"#52c41a\",\n                    fontWeight: \"bold\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  SUCCESS\n                </Option>\n                <Option\n                  value=\"UNSUCCESS\"\n                  style={{\n                    color: \"#ff4d4f\",\n                    fontWeight: \"bold\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  UNSUCCESS\n                </Option>\n              </Select>\n            </>\n          );\n        } else if (record.status === \"UNSUCCESS\") {\n         \n          return (\n            <>\n              <Select\n                style={{\n                  width: 100,\n                  color: \"red\",\n                  fontSize: \"0.6rem\",\n                }}\n                onChange={(value) => {\n                  // handleChange(text, record);\n                  \n                  // Set key to state\n                  // setKeyIndex(record.key);\n                  const preStatus = record.status;\n                 \n                  var price;\n\n                  if (value === \"SUCCESS\") {\n                    price = parseFloat(record.price);\n                    \n                    setTotal(total + price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n                  if (preStatus === \"SUCCESS\" && value === \"UNSUCCESS\") {\n                    price = parseFloat(record.price);\n                   \n                    setTotal(total - price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n                  if (preStatus === \"SUCCESS\" && value === \"ON GOING\") {\n                    price = parseFloat(record.price);\n                    setTotal(total - price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n      \n                  // Change status to data\n                  record.status = value;\n                }}\n              >\n                <Option\n                  value=\"ON GOING\"\n                  style={{\n                    color: \"#bdc3c7\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  ON GOING\n                </Option>\n                <Option\n                  value=\"SUCCESS\"\n                  // className=\"SUCCESS\"\n                  style={{\n                    color: \"#52c41a\",\n                    fontWeight: \"bold\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  SUCCESS\n                </Option>\n                <Option\n                  value=\"UNSUCCESS\"\n                  style={{\n                    color: \"#ff4d4f\",\n                    fontWeight: \"bold\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  UNSUCCESS\n                </Option>\n              </Select>\n            </>\n          );\n        } else if (record.status === \"SUCCESS\") {\n         \n          return (\n            <>\n              <Select\n                style={{\n                  width: 100,\n                  color: \"#52c41a\",\n                  fontSize: \"0.6rem\",\n                }}\n                // defaultValue=\"ON GOING\"\n                // ref={statusRef}\n                onChange={(value) => {\n                  // handleChange(text, record);\n                  \n                  // Set key to state\n                  // setKeyIndex(record.key);\n                  const preStatus = record.status;\n             \n                  var price;\n\n                  if (value === \"SUCCESS\") {\n                    price = parseFloat(record.price);\n              \n                    setTotal(total + price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n                  if (preStatus === \"SUCCESS\" && value === \"UNSUCCESS\") {\n                    price = parseFloat(record.price);\n                \n                    setTotal(total - price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n                  if (preStatus === \"SUCCESS\" && value === \"ON GOING\") {\n                    price = parseFloat(record.price);\n                    setTotal(total - price);\n                    trigger ? setTrigger(false) : setTrigger(true);\n                  }\n\n              \n                  // Change status to data\n                  record.status = value;\n                }}\n              >\n                <Option\n                  value=\"ON GOING\"\n                  style={{\n                    color: \"#bdc3c7\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  ON GOING\n                </Option>\n                <Option\n                  value=\"SUCCESS\"\n                  // className=\"SUCCESS\"\n                  style={{\n                    color: \"#52c41a\",\n                    fontWeight: \"bold\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  SUCCESS\n                </Option>\n                <Option\n                  value=\"UNSUCCESS\"\n                  style={{\n                    color: \"#ff4d4f\",\n                    fontWeight: \"bold\",\n                    fontSize: \"0.6rem\",\n                  }}\n                >\n                  UNSUCCESS\n                </Option>\n              </Select>\n            </>\n          );\n        }\n      },\n    },\n\n    {\n      title: \"Message\",\n      dataIndex: \"others\",\n      key: \"others\",\n      className: \"columns\",\n      render: (text, record) => (<Input placeholder=\"write\" onChange={(e)=> {\n        handleTextChange(e, record);\n      }}/>)\n    },\n  ];\n\n  return (\n    <div>\n      <DeliveryHeader />\n      <div className=\"content\">\n        <div className=\"contentHeaderWrap\">\n          <p className=\"content-header\">TO BE DELIVER </p>\n          <Button\n            size=\"default\"\n            className=\"generateList\"\n            icon={<FileAddOutlined />}\n            // onClick={generateList}\n            onClick={showModal}\n          >\n            ListID\n          </Button>\n        </div>\n\n        {/* show modal */}\n        <Modal\n        title=\"List\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel}\n      >\n          <Item >\n            {/* <Input ref={ListIdRef} onChange={(e)=> {setDataListId(e.target.value)}}/> */}\n            <Button style={{marginTop:\"1.2rem\", marginRight:\"1rem\" }} type=\"primary\"\n            size=\"default\" onClick={handleClickList}>Submit</Button>\n             <Button type=\"default\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          </Item>\n      </Modal>\n        <Table\n          columns={columns}\n          // dataSource={data}\n          dataSource={initialValue}\n          // scroll={{ y: 500 }}\n          scroll={{ x: \"max-content\", y: 600 }}\n          pagination={false}\n          style={{ padding: \"0 1rem\" }}\n        />\n      </div>\n      {/* Amount is dynamic value */}\n      <div className=\"total-container\">\n        {/* <p>\n          TOTAL AMOUNT:{}\n          <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}>\n            ${total}{\" \"}\n          </span>{\" \"}\n        </p> */}\n        <Form onFinish={onFinish} onFinishFailed={onFinishFailed}>\n          <Button\n            type=\"primary\"\n            size=\"default\"\n            htmlType=\"submit\"\n            className=\"total-button\"\n          >\n            Submit\n          </Button>\n          <Button>Cancel</Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default DeliveryDashBoard;\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport {GetColumnSearchProps} from \"../../includes/external\"\n\nimport {\n  DatePicker,\n  Table,\n  Input,\n  message,\n  AutoComplete,\n  Select,\n  Form\n} from \"antd\";\n\n\n// Component\nimport ContentProductAdd from \"../Products/ContentProductAdd\";\nimport Chart from \"../DashBoard/Chart\";\nimport { ProductContext } from \"../../context/AuthContext\";\nconst { Item } = Form;\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 80,\n  },\n  wrapperCol: {\n    span: 80,\n  },\n};\n\nconst { RangePicker } = DatePicker;\n\nfunction ReportDelivery() {\n  \n\n  const dateFormat = \"YYYY/M/D\";\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n  const [options, setOptions] = useState([]);\n  const [value, setValue] = useState([]);\n  // State for data to load\n\n  // const [startDate,setStartDate] = useState(\"\");\n  // const [endDate, setEndDate] = useState(\"\");\n  const [dateString, setDateString] = useState({startDate:\"\",\n                                                endDate: \"\"});\n  const [deliveryName, setDeliveryName] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [initialValue, setInitialValue] = useState([]);\n  const [initialStatus, setInitialStatus] = useState([]);\n  \n\n  //UseEffect\n  // Display shop\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`${process.env.REACT_APP_DOMAIN}/api/user/getallusers`, {\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      });\n      const allData = result.data.data;\n      setData(allData);\n    };\n    fetchItem();\n\n  }, []);\n\n\n\n  //Display all packages\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`${process.env.REACT_APP_DOMAIN}/delivery/commission`, \n      {\n        params: {start:dateString.startDate, end:dateString.endDate, name:deliveryName, },\n        headers: { \"auth-token\": localStorage.getItem(\"token\")}\n       })\n      \n      \n      setInitialValue(result.data.data);\n      setInitialStatus(result.data)\n   \n    };\n   \n    if(deliveryName !== \"\" && dateString.startDate !== \"\"&& dateString.endDate !== \"\")\n      fetchItem();\n   \n      \n  }, [deliveryName, dateString.startDate, dateString.endDate]);\n\n  // Event\n  // get data after change date\n  const onSearch = (searchText) => {\n  \n    setOptions(\n      !searchText\n        ? []\n        : () => {\n            const regex = new RegExp(`^${value}`, \"i\");\n            const store = data.sort().filter((v) => regex.test(v.user_name));\n\n            // setValue(store);\n            const send = store.map((data) => {\n              return {\n                value: data.user_name,\n                key:data.user_id\n              };\n            });\n        \n            return send;\n          }\n    );\n  };\n\n  const onSelect = (data) => {\n\n    setDeliveryName(data);\n  };\n\n  const onChange = (data) => {\n    setValue(data);\n  };\n\n  const handleDate = (date, dateString) => {\n      setDateString({\n          startDate:dateString[0],\n          endDate: dateString[1]\n      })\n  \n  };\n  const cancel = (e) => {\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    \n  \n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n   \n    setVisible(false);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.product_id;\n \n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `http://165.22.252.116/api/user/deleteuserbyid/${id}`\n      );\n    \n      setInitialValue(initialValue.filter((value) => value.user_id != id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"package_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...GetColumnSearchProps(\"product_id\"),\n      sorter: (a, b) => a.product_id - b.product_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>COD</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n\n    {\n      title: <strong>Receiver</strong>,\n      dataIndex: \"cust_name\",\n      key: \"cust_name\",\n    },\n    {\n      title: <strong>STATUS</strong>,\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {(() => {\n            if (status === \"UNSUCCESS\")\n              return <span style={{ color: \"#ff4d4f\" }}>UNSUCCESS</span>;\n            if (status === \"ON GOING\")\n              return <span style={{ color: \"#1890ff\" }}>ON GOING</span>;\n            return <span style={{ color: \"#52c41a\" }}>SUCCESS</span>;\n          })()}\n        </>\n      ),\n    },\n    {\n      title: <strong>Date</strong>,\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n    },\n\n    {\n      title: <strong>Delivery By</strong>,\n      dataIndex: \"delivery_man_name\",\n      key: \"delivery_man_name\",\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n     \n      <div>\n        <div className=\"header-delivery-report\"> \n     \n              <AutoComplete\n               style={{width:\"50vh\"}}\n                      \n                      options={options}\n                      onSelect={onSelect}\n                      onSearch={onSearch}\n                      onChange={onChange}\n                     \n                >\n                  <Input.Search size=\"large\"  placeholder=\"Input name\" enterButton />\n\n                </AutoComplete>\n            {/* </Item> */}\n          <RangePicker onChange={handleDate} size={\"large\"} format={dateFormat}/>\n        </div>\n     \n        {/* status and total_amount */}\n        {initialStatus && (\n        <div className=\"container-box\">\n        <div className=\"box1\">\n          <p>DELIVERED TOTAL</p>\n          <h3>{initialStatus.report  ?initialStatus.report.total : null}</h3>\n                  \n        </div>\n    \n        <div className=\"box2\">\n          <p>SUCCESS</p>\n          <h3>{initialStatus.report?initialStatus.report.total_success:null}</h3>\n        </div>\n        <div className=\"box4\">\n          <p>UNSUCCESS</p>\n          <h3>{initialStatus.report?initialStatus.report.total_unsuccess:null}</h3>\n        </div>\n        <div className=\"box3\">\n          <p>TOTAL</p>\n          {initialStatus? <h3>$ {initialStatus.totalAmount}</h3>:null}\n        </div>\n        \n      </div>)\n}\n\n        {/* Table */}\n        <Table\n          columns={columns}\n          dataSource={initialValue}\n        />\n      </div>\n    </ProductContext.Provider>\n  );\n}\n\nexport default ReportDelivery;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport logo from \"../../images/favicon.ico\";\nimport axios from \"axios\";\nimport {  Empty, Table } from \"antd\";\n\nexport class PDFShop extends React.PureComponent {\n  state = {\n    value: null,\n    status: {},\n    reasons: {}\n  };\n\n\n  \n  componentDidUpdate(prevProps, prevState) {\n    // Runs after the first render() lifecycle\n \n    const products = this.props.productList;\n   \n   \n    \n   \n    if (this.props.productList !== prevProps.productList) {\n      const listId = this.props.productList.listId;\n      const deliveryManName = this.props.productList.deliveryManName;\n      \n        \n      const filter =  products.filter((product)=> product.status === 'UNSUCCESS');\n      this.setState({\n        value: products,\n        reasons:filter\n      });\n     \n      // Fetch data\n      const fetchItem = async () => {\n        try {\n          const result = await axios.get(\n            `${process.env.REACT_APP_DOMAIN}/shop/dailyShopReport`,\n            {\n              params: {date:this.props.date, shop:this.props.shop},\n              headers: { \"auth-token\": localStorage.getItem(\"token\")}\n             }\n          ); \n          this.setState({\n            status:result.data\n          });\n        } catch (error) {\n            console.error('error from fetch data')\n        }\n      };\n      // if (!this.props.shop  )\n      // {\n      //   console.log('hi')\n      //   fetchItem();\n      // }\n\n     \n      // if(products !== Empty)\n      // {\n      //   fetchItem();\n      // }\n\n      if (this.props.productList)\n        fetchItem();\n     \n       \n    }\n  }\n\n  render() {\n    const columns = [\n      {\n        //title is display on coulmn\n        //dataIndex to match with datasouce to display\n        title: <strong>ល.រ</strong>,\n        dataIndex: \"package_id\",\n        key: \"id\",\n      },\n\n      {\n        title: <strong>ទីតាំង</strong>,\n        dataIndex: \"cust_location\",\n        key: \"cust_location\",\n        className: \"pro-location\",\n      },\n\n      {\n        title: <strong> លេខទូរស័ព្ទ</strong>,\n        dataIndex: \"cust_phone\",\n        key: \"cust_phone\",\n      },\n\n      {\n        title: <strong>តម្លៃទំនិញ</strong>,\n        dataIndex: \"pro_price\",\n        key: \"pro_price\",\n        render:(text)=>{\n          return <span>${text}</span>\n      }\n      },\n\n      {\n        title: <strong>ការបង់ថ្លៃទំនិញ</strong>,\n        dataIndex: \"payment_method\",\n        key: \"payment_method\",\n      },\n\n      // {\n      //   title: <strong>ការបង់ថ្លៃទំនិញ</strong>,\n      //   dataIndex: \"service_paid_by\",\n      //   key: \"service_paid_by\",\n      // },\n\n      {\n        title: <strong> ម្លៃសេវា</strong>,\n        dataIndex: \"service_fee\",\n        key: \"service_fee\",\n        render:(text)=>{\n          return <span>${text}</span>\n      }\n      },\n\n      {\n        title: <strong>ការបង់ថ្លៃសេវា</strong>,\n        dataIndex: \"service_paid_by\",\n        key: \"service_paid_by\",\n      },\n\n     \n\n      \n      {\n        title: <strong>ស្ថានភាព</strong>,\n        dataIndex: \"status\",\n        key: \"status\",\n      },\n\n      {\n        title: <strong>តម្លៃសរុប</strong>,\n        dataIndex: \"package_price\",\n        key: \"subtotal\",\n        render:(text)=>{\n          return <span>${text}</span>\n      }\n      },\n\n    ];\n   \n    return (\n      <>\n        {this.state.value && this.state.reasons && (\n          <div\n            className=\"center-pdf\"\n          >\n            <div className=\"pdf-list-header\">\n              <div>\n                <img src={logo} alt=\"Logo\" className=\"pdf-list-header-logo\" />\n                <p > <span className=\"store-name\">ឈ្មោះហាង :</span>{this.state.value[0] ? this.state.value[0].shop_owner : null} </p> \n              </div>\n              <div className=\"text-align\">\n                <h1 className=\"invoice\">Invoice</h1>\n                {/* <p>ការបរិច្ជេទ: {this.state.value[0].created_at}</p> */}\n                <p className=\"listDate\">\n                  កាលបរិច្ជេទ:{\" \"}\n                  {this.state.value[0] ? this.state.value[0].created_at : null}\n                </p>\n                <p className=\"listPhone\">\n                  លេខទូរស័ព្ទ: 099 589 689 / 081 335 965\n                </p>\n                <p className=\"listPhone\">www.powergdelivery.com</p>\n              </div>\n              \n            </div>\n\n            {/* Status success */}\n            <div className=\"status-column\">\n                  <div className=\"status-box1\">\n                    <p>សរុបការដឹក</p>\n                    <h3>{this.state.status.total_package}</h3>\n                  </div>\n\n                  <div className=\"status-box2\">\n                    <p>ដឺកជេាគជ័យ</p>\n                    <h3>{this.state.status.success}</h3>\n                  </div>\n\n                  <div className=\"status-box4\">\n                    <p>ដឹកបរាជ័យ</p>\n                    <h3>{this.state.status.unsuccess}</h3>\n                  </div>\n            </div>\n              <Table\n              columns={columns}\n              dataSource={this.state.value}\n              bordered\n              pagination={false}\n              \n            />\n\n            {/* Total_Amount */}\n            <div className=\"footer-pdfShop\">\n                <div className=\"unsuccess-note\">\n                    <p className=\"unsuccess-note-note\">សំគាល់:</p>\n                    \n\n                     {this.state.reasons.map((reason) => \n                        <p className=\"unsuccess-reason\"> \n                            {reason.package_id}: {reason.others}\n                       </p>)}       \n                                    \n                </div>\n                <div className=\"total_amount\">\n                    <p>\n                      សរុបទឹកប្រាក់:{}\n                      <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}  >\n                      {\"$\"}{this.state.status.total_amount}\n                      </span>\n                    </p>\n                </div>\n\n            </div>\n           \n           \n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\nimport  {PDFShop} from './PDFShop';\nimport {GetColumnSearchProps} from \"../../includes/external\"\n\n\nimport {\n  DatePicker,\n  Table,\n  Button,\n  message,\n  Select,\n} from \"antd\";\nimport {\n  ShopOutlined,\n  DownloadOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\n\n// Component\n\nimport { ProductContext } from \"../../context/AuthContext\";\n\nconst { Option } = Select;\n\nfunction ReportShop() {\n\n  \n \n  const dateFormat = 'YYYY/M/D';\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [initialValue, setInitialValue] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  const [productList, setProductList] = useState({});\n\n\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [status, setStatus] =useState({});\n  const [shop, setShop] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n  const [options, setOptions] = useState([]);\n  const [count, setCount] = useState(0);\n  //Ref\n  const clearRef = useRef('');\n  const refPrint = useRef();\n\n  //UseEffect\n  //get shop name\n  useEffect(() => {\n    const fetchItem = async () => {\n      const tgai = await moment().format('YYYY/M/D');\n      const result = await axios.get(\n        `${process.env.REACT_APP_DOMAIN}/shop/getShopByDate`,\n        { \n          params: {\n          date: tgai\n         },\n          headers: { \"auth-token\": localStorage.getItem(\"token\"),\n         \n         },\n        }\n      );\n      setDate(tgai);\n      const allData = result.data.data;\n     \n      if (allData === undefined)\n          return;\n      \n      setOptions(allData);\n    };\n    fetchItem();\n   \n  }, []);\n  //\n  useEffect(() => {\n    const fetchItem = async () => {\n  \n      const result = await axios.get(\n        `${process.env.REACT_APP_DOMAIN}/shop/getShopByDate`,\n        { \n          params: {\n          date: date\n         },\n          headers: { \"auth-token\": localStorage.getItem(\"token\"), \n         },\n        \n        }\n      );\n      \n      const allData = result.data.data;\n    \n      if (allData === undefined)\n      {\n      \n          // clearRef.current.innerText = status.total_amount;\n          setOptions([])\n          setInitialValue([])\n          return;\n      }\n      \n      setOptions(allData);\n      setProductList(initialValue)\n      setDate(date)\n      setShop(shop)\n    };\n\n    // Run fetch data \n    if(count !== 0)\n      fetchItem();\n\n \n    return ()=> {\n        setShop(null)\n    }\n  }, [date]);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios.get(\n        `${process.env.REACT_APP_DOMAIN}/shop/packageOfShopByDate`,\n        { \n          params: {\n          date: date,\n          shop:shop\n         },\n          headers: { \"auth-token\": localStorage.getItem(\"token\"),\n         },\n        }\n      );\n      const allData = result.data.data;\n      console.log(allData)\n      setInitialValue(allData)\n      setProductList(allData)\n      const daily = await axios.get(\n        `${process.env.REACT_APP_DOMAIN}/shop/dailyShopReport`,\n        {\n          params:{\n            date:date,\n            shop:shop\n          },\n          headers: { \"auth-token\": localStorage.getItem(\"token\"),\n        },\n        }\n      );\n\n      setStatus(daily.data);\n    \n\n    };\n   \n    if(shop)\n    {\n      fetchItem()\n    }  \n   \n  }, [shop]);\n  // Event\n\n  //print report PDF\n  const handlePrint = useReactToPrint({\n    content: () => refPrint.current,\n  });\n  // get data after change date\n  function onChange(date, dateString) {\n    setDate(dateString)\n    setCount(1);\n  }\n\n  const cancel = (e) => {\n\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n\n    setVisible(false);\n  };\n\n  function handleChange(value) {\n      setShop(value);\n  }\n\n const handleStatus = (value) => {\n    const statusChange = initialValue.filter((data) => {\n        return  data.status === value;\n    })\n    setInitialValue(statusChange)\n }\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"package_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n      ...GetColumnSearchProps(\"product_id\"),\n      sorter: (a, b) => a.package_id - b.package_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>COD</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n\n    {\n      title: <strong>Receiver</strong>,\n      dataIndex: \"cust_name\",\n      key: \"cust_name\",\n    },\n    {\n      title: <strong>STATUS</strong>,\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {(() => {\n            if (status === \"UNSUCCESS\")\n              return <span style={{ color: \"#ff4d4f\" }}>UNSUCCESS</span>;\n            if (status === \"ON GOING\")\n              return <span style={{ color: \"#1890ff\" }}>ON GOING</span>;\n            if (status === \"SUCCESS\")\n              return <span style={{ color: \"#52c41a\" }}>SUCCESS</span>;\n            return <span style={{ color: \"#bdc3c7\" }}>PENDING</span>;\n           \n          })()}\n        </>\n      ),\n    },\n    {\n      title: <strong>Date</strong>,\n      dataIndex: \"delivered_at\",\n      key: \"date\",\n    },\n\n    {\n      title: <strong>Delivery By</strong>,\n      dataIndex: \"delivery_man_name\",\n      key: \"delivery_man_name\",\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n      {/* Header */}\n      <div>\n        <div className=\"total-container-report\">\n          <p>\n            TOTAL AMOUNT:{}\n            <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}  ref={clearRef}>\n              {\" \"}\n              ${status.total_amount}{\" \"}\n            </span>{\" \"}\n          </p>\n          {/* <Button type=\"primary\" size=\"default\" className=\"total-button\">\n          Submit\n        </Button>\n        <Button>Cancel</Button> */}\n        </div>\n        <div className=\"header-reportShop\">\n          <DatePicker\n            defaultValue={moment()}\n            format={dateFormat}\n            onChange={onChange}\n            //   className=\"date\"\n          />\n          {/* shop */}\n          <Select\n            icon={<ShopOutlined />}\n            defaultValue=\"Shop\"\n            style={{ width: 160 }}\n            onChange={handleChange}\n            size=\"default\"  \n          >\n             {options.map((option) => (\n              <Option key={option.shop_owner} value={option.value}  >\n                {option.shop_owner}\n              </Option>\n            ))} \n\n          </Select>\n        \n\n          {/* Download */}\n          <Button\n            type=\"primary\"\n            size=\"default\"\n            icon={<DownloadOutlined />}\n            onClick={()=> {\n              setProductList(initialValue);\n              handlePrint();\n            }}\n          ></Button>\n        </div>\n        {/* Table */}\n        <Table\n          columns={columns}\n          dataSource={initialValue}\n        />\n        <PDFShop ref={refPrint}\n         productList={productList}\n         date={date}\n         shop={shop}\n         />\n        {/* Amount is dynamic value */}\n        {/* Amount is dynamic value */}\n        {/* <div className=\"total-container-report\">\n          <p>\n            TOTAL AMOUNT:{}\n            <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}>\n              100{\" \"}\n            </span>{\" \"}\n          </p>\n          \n        </div> */}\n      </div>\n    </ProductContext.Provider>\n  );\n}\n\nexport default ReportShop;\n","export default __webpack_public_path__ + \"static/media/section1.1.788cafbc.jpg\";","export default __webpack_public_path__ + \"static/media/section3.5175a4d0.jpg\";","import React,{useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BackTop } from \"antd\";\nimport section1 from \"../images/section1.1.jpg\";\nimport section3 from \"../images/section3.jpg\";\nimport { UpOutlined } from \"@ant-design/icons\";\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n\nfunction HomePage() {\n  useEffect(() => {\n    AOS.init({\n      duration : 2000,\n      once: true\n    });\n  }, []);\n  const style = {\n    height: 35,\n    width: 35,\n    lineHeight: \"35px\",\n    borderRadius: 4,\n    backgroundColor: \"#f86969\",\n    color: \"#fff\",\n    textAlign: \"center\",\n  };\n\n  return (\n    <div>\n      {/* <!-- Navigation--> */}\n      <nav class=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav\">\n        <div class=\"container\">\n          <a\n            class=\"navbar-brand js-scroll-trigger logo-string\"\n            href=\"#page-top\"\n          >\n            <span>PowerG </span> <span id=\"delivery\">Delivery</span>\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href=\"#\">\n                  Home\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href=\"#service\">\n                  Service\n                </a>\n              </li>\n\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href=\"#signup\">\n                  Contact\n                </a>\n              </li>\n              <li class=\"nav-item \">\n                <a\n                  class=\"nav-link js-scroll-trigger active \"\n                  // id=\"btnLogin-homePage\"\n                  href=\"\"\n                >\n                  <Link to=\"/login\" id=\"leaveBlank\">\n                    Login\n                  </Link>\n                </a>\n              </li>\n              {/* <Link to=\"/\">Login</Link> */}\n            </ul>\n          </div>\n        </div>\n      </nav>\n      {/* <!-- Masthead--> */}\n      <header class=\"masthead\">\n        <div class=\"container d-flex h-100 align-items-center\">\n          <div class=\"mx-auto text-center\">\n            <h1 class=\"mx-auto my-0 text-uppercase\">Power-G Delivery</h1>\n            <h2 class=\"text-white-50 mx-auto mt-2 mb-5\">\n                 Reliability, Flexibility and Quality are our values.\n            </h2>\n            <a class=\"btn btn-primary js-scroll-trigger\" href=\"#about\">\n              Learn more\n            </a>\n          </div>\n        </div>\n      </header>\n      {/* <!-- About--> */}\n      <section class=\"about-section text-center\" id=\"about\">\n        <div class=\"container\">\n          <div class=\"row\"></div>\n        </div>\n      </section>\n      {/* <!-- Projects--> */}\n      <section class=\"projects-section bg-light\" id=\"service\">\n        <div class=\"container\">\n          {/* <!-- Featured Project Row--> */}\n          <h2\n            style={{\n              marginBottom: \"3rem\",\n              borderBottom: \"2px solid red\",\n              display: \"inline-block\",\n            }}\n          >\n            Service\n          </h2>\n          <div class=\"row align-items-center no-gutters mb-4 mb-lg-5\">\n            <div class=\"col-xl-8 col-lg-7\" >\n              <img\n                class=\"img-fluid mb-3 mb-lg-0\"\n                loading=\"lazy\"\n                src={section1}\n                alt=\"Poster\"\n                data-aos=\"zoom-in-down\"\n              />\n            </div>\n            <div class=\"col-xl-4 col-lg-5\">\n              <div class=\"featured-text text-center text-lg-left\">\n                <h4>Why us?</h4>\n                <p class=\"text-black-50 mb-0\">\n                We help our clients delivering products to their customers in no more than one day. Thus, with our\n                daily report system, our clients are more accessible and more transparent with our whole delivery process.\n                </p>\n              </div>\n            </div>\n          </div>\n          {/* <!-- Project One Row--> */}\n          <div class=\"row justify-content-center no-gutters mb-5 mb-lg-0\">\n            <div class=\"col-lg-6\" >\n              <img\n                loading=\"lazy\"\n                class=\"img-fluid\"\n                src=\"https://images.unsplash.com/photo-1566576721346-d4a3b4eaeb55?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=701&h=500&q=80\"\n                alt=\"product to customer\"\n                data-aos={\"fade-down\"}\n              />\n              </div>\n             \n              \n            <div class=\"col-lg-6\" data-aos={\"fade-up\"} >\n              <div class=\"bg-black text-center h-100 project\">\n                <div class=\"d-flex h-100\">\n                  <div class=\"project-text w-100 my-auto text-center text-lg-left\">\n                    <h4 class=\"text-white\">Mission</h4>\n                    <p class=\"mb-0 text-white-50\">\n                    our company’s mission is to provide reliable, variety and high-speed delivery service to our clients. By variety, we mean to serve and be flexible with our clients’ needs and requests. With our professional delivery team, customers are fully satisfied in using the service we provide.\n                    </p>\n                    <hr class=\"d-none d-lg-block mb-0 ml-0\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* <!-- Project Two Row--> */}\n          <div class=\"row justify-content-center no-gutters\">\n            <div class=\"col-lg-6\" data-aos=\"fade-up\">\n              <img\n                class=\"img-fluid\"\n                src={section3}\n                alt=\"showcase\"\n                loading=\"lazy\"\n              />\n            </div>\n            <div class=\"col-lg-6 order-lg-first\" data-aos=\"fade-down\">\n              <div class=\"bg-black text-center h-100 project\">\n                <div class=\"d-flex h-100\">\n                  <div class=\"project-text w-100 my-auto text-center text-lg-right\">\n                    <h4 class=\"text-white\">Join us now</h4>\n                    <p class=\"mb-0 text-white-50\">\n                        Join us now and become one of our partner to receive conclusive benifits.\n                    </p>\n                    <hr class=\"d-none d-lg-block mb-0 mr-0\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* <!-- Signup--> */}\n      <section class=\"signup-section\" id=\"signup\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-10 col-lg-8 mx-auto text-center\">\n              <i class=\"far fa-paper-plane fa-2x mb-2 text-white\"></i>\n              <h2 class=\"text-white mb-5\">Subscribe to receive updates!</h2>\n              <form class=\"form-inline d-flex\">\n                <input\n                  class=\"form-control flex-fill mr-0 mr-sm-2 mb-3 mb-sm-0\"\n                  id=\"inputEmail\"\n                  type=\"email\"\n                  placeholder=\"Enter email address...\"\n                />\n                <button class=\"btn btn-primary mx-auto\" type=\"submit\">\n                  Subscribe\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* <!-- Contact--> */}\n      <section class=\"contact-section bg-black\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-4 mb-3 mb-md-0\" >\n              <div class=\"card py-4 h-100\">\n                <div class=\"card-body text-center\">\n                  <i class=\"fas fa-map-marked-alt text-primary mb-2\"></i>\n                  <h4 class=\"text-uppercase m-0\">Address</h4>\n                  <hr class=\"my-4\" />\n                  <div class=\"small text-black-50\">\n                    #D1, Street 345, Phum Tumnob, Khan Sen Sok, Phnom Penh\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4 mb-3 mb-md-0\">\n              <div class=\"card py-4 h-100\">\n                <div class=\"card-body text-center\">\n                  <i class=\"fas fa-envelope text-primary mb-2\"></i>\n                  <h4 class=\"text-uppercase m-0\">Email</h4>\n                  <hr class=\"my-4\" />\n                  <div class=\"small text-black-50\">\n                    <a href=\"mailto:powergdelivery@gmail.com\">\n                      powergdelivery@gmail.com\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4 mb-3 mb-md-0\">\n              <div class=\"card py-4 h-100\">\n                <div class=\"card-body text-center\">\n                  <i class=\"fas fa-mobile-alt text-primary mb-2\"></i>\n                  <h4 class=\"text-uppercase m-0\">Phone</h4>\n                  <hr class=\"my-4\" />\n                  <div class=\"small text-black-50\">099 589 689</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"social d-flex justify-content-center\">\n            <a\n              class=\"mx-2\"\n              target=\"_blank\"\n              href=\"https://www.facebook.com/PowerGDelivery\"\n            >\n              <i class=\"fab fa-facebook-f\"></i>\n            </a>\n          </div>\n        </div>\n      </section>\n      {/* <!-- Footer--> */}\n      <footer class=\"footer bg-black small text-center text-white-50\">\n        <div class=\"container\">Copyright © etalket 2021</div>\n      </footer>\n      <BackTop visibilityHeight={1000}>\n        <div className=\"backup\">\n          <UpOutlined />\n        </div>\n      </BackTop>\n    </div>\n  );\n}\n\nexport default HomePage;\n// style={style}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Form,\n  Table,\n  Select,\n  Button,\n  message,\n  Input,\n  Modal,\n  InputNumber,\n  Popconfirm,\n  Typography,\n} from \"antd\";\nimport axios from \"axios\";\nimport { GetColumnSearchProps } from \"../../includes/external\";\nimport { FileAddOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\nconst { Item } = Form;\nfunction ListEdit({ listIdPass }) {\n  console.log(listIdPass);\n  // state\n  const [total, setTotal] = useState(0);\n  const [listId, setListId] = useState();\n  const [initialValue, setInitialValue] = useState([]);\n  const [trigger, setTrigger] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  const [dataListId, setDataListId] = useState(\"\");\n  const [payment, setPayment] = useState(\"\");\n  const [others, setOthers] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  // Editable State\n  const [form] = Form.useForm();\n  const [data, setData] = useState(initialValue);\n  const [editingKey, setEditingKey] = useState(\"\");\n\n  // useRef\n  const ListIdRef = useRef(null);\n  const dateFormat = \"YYYY/M/D\";\n\n  //UseEffect\n  useEffect(() => {\n    // const listId = localStorage.getItem(\"listId\");\n    // setListId(listId);\n    const fetchItem = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/packageList/getListById/${listIdPass}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      const allData = result.data.data;\n      console.log(allData);\n      // setInitialValue(allData);\n      setData(allData);\n      console.log(initialValue);\n    };\n\n    const fetchTotalAmount = async () => {\n      try {\n        const result = await axios.get(\n          `${process.env.REACT_APP_DOMAIN}/packageList/getListAndGenerateTotal/${listIdPass}`,\n          {\n            headers: {\n              \"auth-token\": localStorage.getItem(\"token\"),\n            },\n          }\n        );\n        // setProductList(result);\n        console.log(\"amount\", result.data.total_amount);\n        setAmount(result.data.total_amount);\n      } catch (error) {\n        console.log(\"error\" + error);\n      }\n    };\n    // if(listId)\n    // console.log(\"fetchTotal\", fetchTotalAmount);\n    fetchItem();\n    fetchTotalAmount();\n  }, [listIdPass, trigger]);\n\n  const hide = () => {\n    setVisible(false);\n  };\n  const handleVisibleChange = (visible) => {\n    setVisible(visible);\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  // Function to get ListId\n  const handleGetList = async () => {\n    const tgai = await moment().format(\"YYYY/M/D\");\n    const name = localStorage.getItem(\"u_username\");\n    const id = localStorage.getItem(\"u_id\");\n\n    try {\n      const result = await axios.get(\n        `${process.env.REACT_APP_DOMAIN}/packageList/getListByDateId`,\n        {\n          headers: { \"auth-token\": localStorage.getItem(\"token\") },\n          params: {\n            date: tgai,\n            id: id,\n            name: name,\n          },\n        }\n      );\n\n      const lastIndex = result.data.data.length - 1;\n\n      const ListIdBack = result.data.data[lastIndex].listId;\n      setListId(ListIdBack);\n      localStorage.setItem(\"listId\", ListIdBack);\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      message.error({\n        content: \"\" + \"Can not get list\",\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  const handleClickList = () => {\n    if (listId) {\n      message.error({\n        content: \"\" + \"u have already generate list\",\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n      return;\n    } else {\n      handleGetList();\n    }\n  };\n\n  const handleTextChange = (e, record) => {\n    // update messaget to data\n    record.others = e.target.value;\n  };\n\n  function checkStatus(values) {\n    values.forEach((value) => {\n      if (value.status === \"ON GOING\") {\n        throw {\n          response: {\n            data: {\n              message: \"please change all status whether success or unsuccess\",\n            },\n          },\n        };\n      }\n    });\n  }\n\n  const handleChangePayment = (value) => {\n    console.log(value);\n    // setPayment(value);\n  };\n\n  const handleOthers = (e) => {\n    console.log(e.target.value);\n    // setOthers(e.target.value);\n  };\n\n  const handleStatus = (value) => {\n    console.log(value);\n    // setStatus(e.target.value);\n  };\n\n  // Editable\n\n  const InputCheck = (inputType) => {\n    if (inputType === \"payment_method\")\n      return (\n        <Select onChange={handleChangePayment}>\n          <Option value=\"COD\">COD</Option>\n          <Option value=\"Paid\">PAID</Option>\n        </Select>\n      );\n\n    if (inputType === \"service_paid_by\")\n      return (\n        <Select>\n          <Option value=\"Transferer\">Transferer</Option>\n          <Option value=\"Receiver\">Receiver</Option>\n        </Select>\n      );\n\n    if (inputType === \"others\") {\n      console.log(\"others\");\n      return <Input onChange={handleOthers} value={others} />;\n    }\n    if (inputType === \"status\") {\n      return (\n        <Select onChange={handleStatus}>\n          <Option value=\"SUCCESS\">SUCCESS</Option>\n          <Option value=\"UNSUCCESS\">UNSUCCESS</Option>\n        </Select>\n      );\n    } else return <Input />;\n  };\n\n  const isEditing = (record) => record.package_id === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      payment_method: \"\",\n      status: \"\",\n      others: \"\",\n      ...record,\n    });\n    setEditingKey(record.package_id);\n  };\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (key) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.package_id);\n      console.log(row);\n      if (index > -1) {\n        const item = newData[index];\n        const returnedTarget = Object.assign(item, row);\n        console.log(row);\n        console.log(returnedTarget);\n        try {\n          const result = await axios.put(\n            `${process.env.REACT_APP_DOMAIN}/package/updatePackageById`,\n            returnedTarget,\n            {\n              headers: {\n                \"auth-token\": localStorage.getItem(\"token\"),\n              },\n            }\n          );\n\n          console.log(result);\n\n          message.success({\n            content: \"\" + result.data.message,\n            duration: 5,\n            className: \"UserSuccessMessage\",\n          });\n\n          console.log(\"newData\", item);\n          newData.splice(index, 1, { ...item, ...row });\n\n          setData(newData);\n          console.log(data);\n          setEditingKey(\"\");\n          trigger ? setTrigger(false) : setTrigger(true);\n          console.log(trigger);\n        } catch (error) {\n          console.log(\"back-end\", error);\n          const messageError = error.response.data.message;\n          message.error({\n            content: \"\" + messageError,\n            className: \"UserErrorMessage\",\n            duration: 5,\n          });\n        }\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const EditableCell = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n  }) => {\n    // const inputNode = inputType === \"Option\" ? <Select /> : <Input />;\n    // const a = (inputType) => {\n    //   console.log(inputType);\n    //   if (inputType === \"Option\") return <Select />;\n    //   else return <Input />;\n    // };\n    // From external.js\n    // console.log(inputType);\n    const inputNode = InputCheck(inputType);\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item\n            name={dataIndex}\n            style={{\n              margin: 0,\n            }}\n            // rules={[\n            //   {\n            //     required: true,\n            //     message: `Please Input ${title}!`,\n            //   },\n            // ]}\n          >\n            {inputNode}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  const columns = [\n    {\n      key: \"package_id\",\n      title: \"PRODUCT ID\",\n      dataIndex: \"package_id\",\n      ...GetColumnSearchProps(\"package_id\"),\n      // className: \"columns\",\n\n      render: (text) => <a>{text}</a>,\n    },\n\n    {\n      title: \"payment_method\",\n      dataIndex: \"payment_method\",\n      key: \"payment_method\",\n      editable: true,\n    },\n\n    {\n      title: \"service_paid_by\",\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n      editable: true,\n    },\n    {\n      title: \"STATUS\",\n      dataIndex: \"status\",\n      key: \"status\",\n      editable: true,\n      // className: \"columns\",\n\n      // Testing\n      // render: (text, record) => {\n      //   if (record.status === \"ON GOING\") {\n      //     return (\n      //       <>\n      //         <Select\n      //           style={{\n      //             width: 100,\n      //             color: \"#bdc3c7\",\n      //             fontSize: \"0.6rem\",\n      //           }}\n      //           defaultValue=\"ON GOING\"\n      //           // ref={statusRef}\n      //           onChange={(value) => {\n      //             // handleChange(text, record);\n\n      //             // Set key to state\n      //             // setKeyIndex(record.key);\n      //             const preStatus = record.status;\n\n      //             var price;\n\n      //             if (value === \"SUCCESS\") {\n      //               price = parseFloat(record.price);\n\n      //               setTotal(total + price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n      //             if (value === \"UNSUCCESS\") {\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //               // trigger === true ? setTrigger(false) : setTrigger(true);\n      //             }\n      //             if (preStatus === \"SUCCESS\" && value === \"UNSUCCESS\") {\n      //               price = parseFloat(record.price);\n\n      //               setTotal(total - price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             if (preStatus === \"SUCCESS\" && value === \"ON GOING\") {\n      //               price = parseFloat(record.price);\n      //               setTotal(total - price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             // Change status to data\n      //             record.status = value;\n      //           }}\n      //         >\n      //           <Option\n      //             value=\"ON GOING\"\n      //             style={{\n      //               color: \"#bdc3c7\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             ON GOING\n      //           </Option>\n      //           <Option\n      //             value=\"SUCCESS\"\n      //             // className=\"SUCCESS\"\n      //             style={{\n      //               color: \"#52c41a\",\n      //               fontWeight: \"bold\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             SUCCESS\n      //           </Option>\n      //           <Option\n      //             value=\"UNSUCCESS\"\n      //             style={{\n      //               color: \"#ff4d4f\",\n      //               fontWeight: \"bold\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             UNSUCCESS\n      //           </Option>\n      //         </Select>\n      //       </>\n      //     );\n      //   } else if (record.status === \"UNSUCCESS\") {\n      //     return (\n      //       <>\n      //         <Select\n      //           style={{\n      //             width: 100,\n      //             color: \"red\",\n      //             fontSize: \"0.6rem\",\n      //           }}\n      //           onChange={(value) => {\n      //             // handleChange(text, record);\n\n      //             // Set key to state\n      //             // setKeyIndex(record.key);\n      //             const preStatus = record.status;\n\n      //             var price;\n\n      //             if (value === \"SUCCESS\") {\n      //               price = parseFloat(record.price);\n\n      //               setTotal(total + price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             if (preStatus === \"SUCCESS\" && value === \"UNSUCCESS\") {\n      //               price = parseFloat(record.price);\n\n      //               setTotal(total - price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             if (preStatus === \"SUCCESS\" && value === \"ON GOING\") {\n      //               price = parseFloat(record.price);\n      //               setTotal(total - price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             // Change status to data\n      //             record.status = value;\n      //           }}\n      //         >\n      //           <Option\n      //             value=\"ON GOING\"\n      //             style={{\n      //               color: \"#bdc3c7\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             ON GOING\n      //           </Option>\n      //           <Option\n      //             value=\"SUCCESS\"\n      //             // className=\"SUCCESS\"\n      //             style={{\n      //               color: \"#52c41a\",\n      //               fontWeight: \"bold\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             SUCCESS\n      //           </Option>\n      //           <Option\n      //             value=\"UNSUCCESS\"\n      //             style={{\n      //               color: \"#ff4d4f\",\n      //               fontWeight: \"bold\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             UNSUCCESS\n      //           </Option>\n      //         </Select>\n      //       </>\n      //     );\n      //   } else if (record.status === \"SUCCESS\") {\n      //     return (\n      //       <>\n      //         <Select\n      //           style={{\n      //             width: 100,\n      //             color: \"#52c41a\",\n      //             fontSize: \"0.6rem\",\n      //           }}\n      //           // defaultValue=\"ON GOING\"\n      //           // ref={statusRef}\n      //           onChange={(value) => {\n      //             // handleChange(text, record);\n\n      //             // Set key to state\n      //             // setKeyIndex(record.key);\n      //             const preStatus = record.status;\n\n      //             var price;\n\n      //             if (value === \"SUCCESS\") {\n      //               price = parseFloat(record.price);\n\n      //               setTotal(total + price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             if (preStatus === \"SUCCESS\" && value === \"UNSUCCESS\") {\n      //               price = parseFloat(record.price);\n\n      //               setTotal(total - price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             if (preStatus === \"SUCCESS\" && value === \"ON GOING\") {\n      //               price = parseFloat(record.price);\n      //               setTotal(total - price);\n      //               trigger ? setTrigger(false) : setTrigger(true);\n      //             }\n\n      //             // Change status to data\n      //             record.status = value;\n      //           }}\n      //         >\n      //           <Option\n      //             value=\"ON GOING\"\n      //             style={{\n      //               color: \"#bdc3c7\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             ON GOING\n      //           </Option>\n      //           <Option\n      //             value=\"SUCCESS\"\n      //             // className=\"SUCCESS\"\n      //             style={{\n      //               color: \"#52c41a\",\n      //               fontWeight: \"bold\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             SUCCESS\n      //           </Option>\n      //           <Option\n      //             value=\"UNSUCCESS\"\n      //             style={{\n      //               color: \"#ff4d4f\",\n      //               fontWeight: \"bold\",\n      //               fontSize: \"0.6rem\",\n      //             }}\n      //           >\n      //             UNSUCCESS\n      //           </Option>\n      //         </Select>\n      //       </>\n      //     );\n      //   }\n      // },\n    },\n\n    {\n      title: \"Message\",\n      dataIndex: \"others\",\n      key: \"others\",\n      editable: true,\n      // render: (text, record) => (\n      //   <Input\n      //     placeholder=\"write\"\n      //     onChange={(e) => {\n      //       handleTextChange(e, record);\n      //     }}\n      //   />\n      // ),\n    },\n\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:;\"\n              onClick={() => save(record.package_id)}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Typography.Link\n            disabled={editingKey !== \"\"}\n            onClick={() => edit(record)}\n          >\n            Edit\n          </Typography.Link>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex,\n\n        // () => {\n        //   return col.dataIndex === \"payment_method\" ? \"Option\" : \"text\";\n        // },\n        // col.dataIndex === \"payment_method\" || col.dataIndex === \"status\"\n        //   ? \"Option\"\n        //   : \"text\",\n        // onChange: handleChange,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  return (\n    <div>\n      {/* <DeliveryHeader /> */}\n      <div className=\"content\">\n        <div className=\"contentHeaderWrap\">\n          <p className=\"content-header\">LIST: {listIdPass}</p>\n\n          <div className=\"total-container-report\">\n            <p>\n              TOTAL AMOUNT:{}\n              <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}>\n                {\" \"}\n                ${amount}{\" \"}\n              </span>{\" \"}\n            </p>\n          </div>\n        </div>\n\n        {/* show modal */}\n        {/* <Modal\n        title=\"List\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel}\n      >\n          <Item >\n            <Button style={{marginTop:\"1.2rem\", marginRight:\"1rem\" }} type=\"primary\"\n            size=\"default\" onClick={handleClickList}>Submit</Button>\n             <Button type=\"default\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          </Item>\n      </Modal> */}\n        {/* <Table\n          // columns={columns}\n          // dataSource={initialValue}\n          // scroll={{ x: \"max-content\", y: 600 }}\n          // pagination={false}\n          // style={{ padding: \"0 1rem\" }}\n          // for editable \n        /> */}\n        <Form form={form} component={false}>\n          <Table\n            components={{\n              body: {\n                cell: EditableCell,\n              },\n            }}\n            bordered\n            dataSource={data}\n            columns={mergedColumns}\n            rowClassName=\"editable-row\"\n            scroll={{ y: 600 }}\n            pagination={false}\n            // pagination={{\n            //   onChange: cancel,\n            // }}\n          />\n        </Form>\n      </div>\n      {/* Amount is dynamic value */}\n      <div className=\"total-container\">\n        {/* <p>\n          TOTAL AMOUNT:{}\n          <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}>\n            ${total}{\" \"}\n          </span>{\" \"}\n        </p> */}\n        {/* <Form onFinish={onFinish} onFinishFailed={onFinishFailed}>\n          <Button\n            type=\"primary\"\n            size=\"default\"\n            htmlType=\"submit\"\n            className=\"total-button\"\n          >\n            Submit\n          </Button>\n          <Button>Cancel</Button>\n        </Form> */}\n      </div>\n    </div>\n  );\n}\n\nexport default ListEdit;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\nimport logo from \"../../images/favicon.ico\";\nimport axios from \"axios\";\nimport { Table } from \"antd\";\n\nexport class PDFList extends React.PureComponent {\n  state = {\n    value: [],\n    listId: \"\",\n    deliveryManName: \"\",\n  };\n\n  componentDidMount() {\n    // this.props.setClick(false);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Runs after the first render() lifecycle\n\n    if (this.props.productList !== prevProps.productList) {\n      const listId = this.props.productList.listId;\n      const deliveryManName = this.props.productList.deliveryManName;\n\n      const fetchItem = async () => {\n        try {\n          const result = await axios.get(\n            `${process.env.REACT_APP_DOMAIN}/packageList/getListById/${listId}`\n          );\n          // setProductList(result);\n\n          this.setState({\n            listValue: listId,\n            value: result.data.data,\n            deliveryManName: deliveryManName,\n          });\n        } catch (error) {\n          console.log(\"error\" + error);\n        }\n      };\n\n      const fetchTotalAmount = async () => {\n        try {\n          const result = await axios.get(\n            `${process.env.REACT_APP_DOMAIN}/packageList/getListAndGenerateTotal/${listId}`,\n            {\n              headers: {\n                \"auth-token\": localStorage.getItem(\"token\"),\n              },\n            }\n          );\n          // setProductList(result);\n          console.log(\"amount\", result.data.total_amount);\n          // this.setState({\n          //   listValue: listId,\n          //   value: result.data.data,\n          //   deliveryManName: deliveryManName,\n          // });\n        } catch (error) {\n          console.log(\"error\" + error);\n        }\n      };\n\n      fetchItem();\n      // fetchTotalAmount();\n    }\n  }\n\n  render() {\n    const columns = [\n      {\n        //title is display on coulmn\n        //dataIndex to match with datasouce to display\n        title: <strong>ល.រ</strong>,\n        dataIndex: \"package_id\",\n        key: \"package_id\",\n      },\n      {\n        title: <strong>អតិថិជន</strong>,\n        dataIndex: \"shop_owner\",\n        key: \"shop_owner\",\n      },\n\n      {\n        title: <strong>ទីតាំង</strong>,\n        dataIndex: \"cust_location\",\n        key: \"cust_location\",\n        className: \"pro-location\",\n      },\n\n      {\n        title: <strong> លេខទូរស័ព្ទ</strong>,\n        dataIndex: \"cust_phone\",\n        key: \"cust_phone\",\n      },\n\n      {\n        title: <strong> ម្លៃសេវា</strong>,\n        dataIndex: \"service_fee\",\n        key: \"service_fee\",\n        render: (text) => {\n          return <span>${text}</span>;\n        },\n      },\n\n      {\n        title: <strong>តម្លៃទំនិញ</strong>,\n        dataIndex: \"pro_price\",\n        key: \"pro_price\",\n        render: (text) => {\n          return <span>${text}</span>;\n        },\n      },\n\n      {\n        title: <strong>ការបង់ថ្លៃសេវា</strong>,\n        dataIndex: \"service_paid_by\",\n        key: \"service_paid_by\",\n      },\n\n      {\n        title: <strong>ការបង់ថ្លៃទំនិញ</strong>,\n        dataIndex: \"payment_method\",\n        key: \"payment_method\",\n      },\n\n      // {\n      //   title: <strong>ម្លៃកញ្ចប់</strong>,\n      //   dataIndex: \"package_price\",\n      //   key: \"package_price\",\n      //   render:(text)=>{\n      //     return <span>${text}</span>\n      // }\n      // },\n\n      // {\n      //   title: <strong>Date</strong>,\n      //   dataIndex: \"created_at\",\n      //   key: \"date\",\n      // },\n    ];\n    return (\n      <>\n        {/* <div className=\"pdf-header\">\n          <img src={logo} alt=\"Logo\" className=\"pdf-logo\" />\n          <p>\n            {/* Change*/}\n\n        {/* </p> */}\n        {this.state.value && (\n          <div className=\"center-pdf\">\n            <div className=\"pdf-list-header\">\n              <div>\n                <img src={logo} alt=\"Logo\" className=\"pdf-list-header-logo\" />\n                <p>ឈ្មោះអ្នកដឹក :{this.state.deliveryManName}</p>\n                <p>លេខបញ្ជី :{this.state.listValue}</p>\n                {/* <p>ពេលដឹក</p> */}\n              </div>\n              <div className=\"text-align\">\n                <h1>តារាងដឹកជញ្ចួន</h1>\n                {/* <p>ការបរិច្ជេទ: {this.state.value[0].created_at}</p> */}\n                <p className=\"listDate\">\n                  កាលបរិច្ជេទ:{\" \"}\n                  {this.state.value[0] ? this.state.value[0].created_at : null}\n                </p>\n                <p className=\"listPhone\">\n                  លេខទូរស័ព្ទ: 099 589 689 / 081 335 965\n                </p>\n              </div>\n            </div>\n\n            <Table\n              columns={columns}\n              dataSource={this.state.value}\n              bordered\n              pagination={false}\n              // className=\"PDF-table-list\"\n            />\n            <p className=\"pdf-website\">www.powergdelivery.com</p>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Table, Button, Space, message, Modal } from \"antd\";\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\nimport { GetColumnSearchProps } from \"../../includes/external\";\nimport Highlighter from \"react-highlight-words\";\nimport axios from \"axios\";\nimport { EditOutlined, PrinterOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\nimport ContentUserEdit from \"../ContentUserEdit\";\nimport ListEdit from \"./ListEdit\";\nimport { PDFList } from \"./PDFList\";\nfunction ContentPrintList() {\n  const data = [\n    {\n      listId: \"11\",\n      deliveryManId: \"1\",\n    },\n  ];\n  // useRef\n  const searchRef = useRef(null);\n  const refPrint = useRef();\n  // State\n  const [initialValue, setInitialValue] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [productList, setProductList] = useState({});\n  // const [searchInput, setSearchInput] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [trigger, setTrigger] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  const [click, setClick] = useState(false);\n  const [listId, setListId] = useState();\n  const handlePrint = useReactToPrint({\n    content: () => refPrint.current,\n  });\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/packageList/getAllLists`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      const allData = result.data.data;\n\n      setInitialValue(allData.reverse());\n    };\n    fetchItem();\n  }, []);\n\n  // Fetch data again we anything change\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/packageList/getAllLists`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      const allData = result.data.data;\n\n      setInitialValue(allData.reverse());\n    };\n    fetchItem();\n  }, [trigger]);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const showModal1 = () => {\n    setVisible1(true);\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const handleCancel1 = () => {\n    setVisible1(false);\n  };\n\n  const handleDownload = (record) => {\n    setProductList(record);\n    // return <PDFList productList={productList} />;\n    // handlePrint();\n    // return <PDFList ref={refPrint} />;\n  };\n  // const handleDelete = (record) => {\n  //   console.log(\"record\", record);\n  // };\n  // const handlePrint = (record) => {\n  //   setVisible1(true);\n  //   console.log(record);\n  //   // <PDFList data={record} />;\n  // };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.user_id;\n\n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `${process.env.REACT_APP_DOMAIN}/api/user/deleteuserbyid/${id}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      setInitialValue(initialValue.filter((value) => value.user_id !== id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  const cancel = (e) => {\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    setUser(record);\n  };\n\n  // Data\n  const columns = [\n    {\n      title: <strong>ListId</strong>,\n      dataIndex: \"listId\",\n      key: \"id\",\n      className: \"col-username\",\n      ...GetColumnSearchProps(\"listId\"),\n    },\n\n    {\n      title: <strong>DeliveryBy</strong>,\n      dataIndex: \"deliveryManName\",\n      key: \"deliveryManName\",\n    },\n    {\n      title: <strong>ACTION</strong>,\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          // const editable = isEditing(record);\n          <Space size=\"middle\">\n            <Button\n              className=\"noOutLine editUser\"\n              icon={<PrinterOutlined />}\n              // onClick={() => handleEdit(text, record)}\n              onClick={() => {\n                // handleDownload(record);\n                setProductList(record);\n                setTimeout(() => {\n                  setClick(true);\n                  handlePrint();\n                }, 2000);\n\n                // handlePrint\n              }}\n              // onClick={handleDownload}\n            ></Button>\n\n            <Button\n              className=\"noOutLine editUser\"\n              icon={<EditOutlined />}\n              // onClick={() => handleEdit(text, record)}\n              onClick={() => {\n                // handleEdit(record);\n                console.log(record);\n                setListId(record.listId);\n                showModal();\n              }}\n            ></Button>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  //  Data\n  return (\n    <>\n      {/* Table */}\n      <Table\n        className=\"listTable\"\n        columns={columns}\n        dataSource={initialValue}\n        // dataSource={data}\n        scroll={{ x: \"max-content\", y: 500 }}\n        pagination={false}\n      />\n      <PDFList\n        ref={refPrint}\n        productList={productList}\n        // click={click}\n        // setClick={setClick}\n      />\n\n      {/* {click ? (\n        <PDFList ref={refPrint} productList={productList} className=\"PDFLIST\" />\n      ) : null} */}\n      {/* Edit */}\n\n      <Modal\n        title=\"List Edit\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel}\n        width={1200}\n      >\n        <ListEdit listIdPass={listId} />\n      </Modal>\n    </>\n  );\n}\n\nexport default ContentPrintList;\n","import React from \"react\";\nimport { Button, Form, Input, message } from \"antd\";\n\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nconst { Item } = Form;\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nfunction ContentShopAdd({\n  setVisible,\n\n  setTrigger,\n}) {\n  // State\n  // const [visible, setVisible] = useState(false);\n  // const [confirmLoading, setConfirmLoading] = useState(false);\n  // const [modalText, setModalText] = useState(\"Content of the modal\");\n\n  const onFinish = async (values) => {\n    const shopName = values.shopName.toUpperCase();\n    const shopContact = values.shopContact;\n    const shopAddress = values.shopAddress;\n    try {\n      const result = await axios.post(\n        `${process.env.REACT_APP_DOMAIN}/shop/register`,\n        {\n          shopName: shopName,\n          shopContact: shopContact,\n          shopAddress: shopAddress,\n        },\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n    \n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n      setTrigger(true);\n      setTrigger(false);\n      setVisible(false);\n    } catch (error) {\n      const messageError = error.response.data.message;\n\n     \n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n  // EventHandler\n  const onFinishFailed = (errorInfo) => {\n   \n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Form\n        // onSubmit={handleSubmit}\n        {...layout}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        style={{ textAlign: \"center\" }}\n      >\n        {/* Username */}\n        <Item\n          name={\"shopName\"}\n          label=\"shopName\"\n          rules={[\n            { transform: (value) => value.trim() },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n            {\n              required: true,\n              message: \"Please input shop's name!\",\n            },\n          ]}\n        >\n          <Input />\n        </Item>\n\n        {/* Password */}\n        <Item\n          name={\"shopContact\"}\n          label=\"shopContact\"\n          maxLength={20}\n          minLength={6}\n          rules={[\n            {\n              required: true,\n              message: \"please input shop's contact!\",\n            },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n          ]}\n        >\n          <Input />\n        </Item>\n        {/* Address */}\n        <Item\n          name={\"shopAddress\"}\n          label=\"shopAddress\"\n          rules={[\n            { transform: (value) => value.trim() },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n            {\n              required: true,\n              message: \"Please input shop's address!\",\n            },\n          ]}\n        >\n          <Input />\n        </Item>\n\n        {/* Submit */}\n        <Item className=\"footerAddUser\">\n          <Button className=\"btnSubmitUser\" type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"default\" onClick={handleCancel}>\n            Cancel\n          </Button>\n        </Item>\n      </Form>\n    </>\n  );\n}\n\nexport default ContentShopAdd;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Table, Button, Space, Modal, Input, Popconfirm, message } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport axios from \"axios\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\n// Component;\nimport ContentShopAdd from \"./ContentShopAdd\";\nimport ContentUserEdit from \"../ContentUserEdit\";\n\nfunction ContentShop() {\n  // useRef\n  const searchRef = useRef(null);\n\n  \n\n  // State\n  const [initialValue, setInitialValue] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  // const [searchInput, setSearchInput] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [trigger, setTrigger] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_DOMAIN}/shop/getAllShops`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n    \n      const allData = result.data.data;\n\n      setInitialValue(allData);\n    };\n    fetchItem();\n   \n  }, [trigger]);\n\n  // Fetch data again we anything change\n  // useEffect(() => {\n  //   const fetchItem = async () => {\n  //     const result = await axios(\n  //       `${process.env.REACT_APP_DOMAIN}/shop/getAllShops`,\n  //       {\n  //         headers: {\n  //           \"auth-token\": localStorage.getItem(\"token\"),\n  //         },\n  //       }\n  //     );\n\n  //     const allData = result.data.data;\n  //     setInitialValue(allData);\n  //   };\n  //   fetchItem();\n\n  // }, [trigger]);\n\n  // searchBar\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          inputId=\"select-input\"\n          ref={searchRef}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n    \n      if (visible) {\n        // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const showModal1 = () => {\n    setVisible1(true);\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const handleCancel1 = () => {  \n    setVisible1(false);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.id;\n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `${process.env.REACT_APP_DOMAIN}/shop/deleteShop/${id}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      setInitialValue(initialValue.filter((value) => value.user_id !== id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  const cancel = (e) => {\n    message.error(\"Click on No\");\n  };\n\n  // function refreshPage() {\n  //   window.location.reload();\n  // }\n  // Data\n  const columns = [\n    // {\n    //   //title is display on coulmn\n    //   //dataIndex to match with datasouce to display\n    //   title: <strong>ID</strong>,\n    //   dataIndex: \"user_id\",\n    //   key: \"id\",\n    //   // defaultSortOrder: \"ascend\",\n\n    //   ...getColumnSearchProps(\"user_id\"),\n    //   sorter: (a, b) => a.user_id - b.user_id,\n    // },\n    {\n      title: <strong>shopName</strong>,\n      dataIndex: \"shopName\",\n      key: \"shopName\",\n      className: \"col-username\",\n      ...getColumnSearchProps(\"shopName\"),\n    },\n    // {\n    //   title: <strong>PASSWORD</strong>,\n    //   dataIndex: \"user_password\",\n    //   key: \"user_password\",\n    // },\n    {\n      title: <strong>shopContact</strong>,\n      dataIndex: \"shopContact\",\n      key: \"shopContact\",\n    },\n\n    {\n      title: <strong>shopAddress</strong>,\n      dataIndex: \"shopAddress\",\n      key: \"shopAddress\",\n    },\n    {\n      title: <strong>ACTION</strong>,\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          // const editable = isEditing(record);\n          <Space size=\"middle\">\n            <Popconfirm\n              title=\"Are you sure to delete this user?\"\n              onConfirm={() => {\n                confirm(record);\n              }}\n              onCancel={cancel}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button\n                className=\"noOutLine removeUser\"\n                icon={<DeleteOutlined />}\n              ></Button>\n            </Popconfirm>\n\n            {/* <Button\n              className=\"noOutLine editUser\"\n              icon={<EditOutlined />}\n              // onClick={() => handleEdit(text, record)}\n              onClick={() => {\n                handleEdit(record);\n              }}\n            ></Button> */}\n          </Space>\n        );\n      },\n    },\n  ];\n\n  //  Data\n  return (\n    <>\n      {/* Refresh Button */}\n      {/* <Button\n        className=\"userRefreshPage\"\n        icon={<SyncOutlined />}\n        onClick={refreshPage}\n        type=\"primary\"\n      >\n        Refresh\n      </Button> */}\n      <div className=\"flex-shop\">\n        <h4>Shop</h4>\n        <Button\n          className=\"userAdd \"\n          icon={<UserAddOutlined />}\n          onClick={showModal}\n        >\n          ADD\n        </Button>\n      </div>\n\n      {/* Table */}\n      <Table\n        columns={columns}\n        dataSource={initialValue}\n        scroll={{ x: \"max-content\", y: 500 }}\n        pagination={false}\n        className=\"listShop\"\n      />\n\n      {/* ADD*/}\n      <Modal\n        title=\"Add New Shop\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <ContentShopAdd\n          setVisible={setVisible}\n          initialValue={initialValue}\n          setInitialValue={setInitialValue}\n          setTrigger={setTrigger}\n        />\n      </Modal>\n\n      {/* Edit */}\n      <Modal\n        title=\"Edit User\"\n        visible={visible1}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel1}\n      >\n        <ContentUserEdit\n          setVisible={setVisible1}\n          user={user}\n          visible1={visible1}\n          setTrigger={setTrigger}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default ContentShop;\n","import React from \"react\";\nimport ContentPrintList from \"../ListAndShop/ContentPrintList\";\nimport ContentShop from \"../ListAndShop/ContentShop\";\n\nfunction ContentList() {\n  return (\n    <div className=\"ContentList\">\n      <div className=\"list\">\n        <h4>List</h4>\n        <ContentPrintList className=\"listTable\" />\n      </div>\n      <div className=\"shop\">\n        <ContentShop className=\"listShop\" />\n      </div>\n    </div>\n  );\n}\n\nexport default ContentList;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport \"ant-design-pro/dist/ant-design-pro.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Layout } from \"antd\";\n// Components\nimport NavBar from \"./components/NavBar\";\nimport DashBoard from \"./components/DashBoard\";\nimport Products from \"./components/Products\";\nimport Users from \"./components/Users\";\nimport Home from \"./components/Home\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PrivateLogin from \"./components/PrivateLogin\";\nimport QrCode from \"./components/QrCode\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"./context/AuthContext\";\nimport DeliveryDashBoard from \"./components/DeliveryMan/DeliveryDashBoard\";\nimport ReportDelivery from \"./components/Reports/ReportDelivery\";\nimport ReportShop from \"./components/Reports/ReportShop\";\nimport HomePage from \"./components/HomePage\";\nimport ContentList from \"./components/ListAndShop/ContentList\";\n\n// Style\nimport styling from \"./style/app.css\";\n// import ReportDelivery from \"./components/Reports/ReportDelivery\";\n// import { UserLogin } from \"./components/Users/UserLogin\";\n\n// Destructuring\nconst { Content, Sider } = Layout;\n\nfunction App() {\n  // Convert pathname set to header\n  // const firstPath = window.location.pathname.split(\"/\")[1];\n  // const path = firstPath.charAt(0).toUpperCase() + firstPath.slice(1);\n\n  // State\n  const [collapsed, setCollapse] = useState(false);\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [roleStatus, setRoleStatus] = useState(\"\");\n  const [userNameStatus, setUsernameStatus] = useState(\"\");\n\n  // const [title, setTitle] = useState(path);\n  const [title, setTitle] = useState(\"Dashboard\");\n  const handleCollapse = (collapsed) => {\n    setCollapse(collapsed);\n  };\n\n  // UseEffect\n  useEffect(() => {\n    const user = localStorage.getItem(\"token\");\n    const role = localStorage.getItem(\"u_role\");\n    const username = localStorage.getItem(\"u_username\");\n    \n    if (user) {\n      setLoginStatus(true);\n      setRoleStatus(role);\n      setUsernameStatus(username);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ loginStatus, setLoginStatus }}>\n      <RoleContext.Provider value={{ roleStatus, setRoleStatus }}>\n        <UsernameContext.Provider value={{ userNameStatus, setUsernameStatus }}>\n          <Router>\n            <div className=\"App\">\n              <Switch>\n                {/* Home Page */}\n                <PrivateLogin\n                  path=\"/\"\n                  exact\n                  component={HomePage}\n                  auth={loginStatus}\n                  role={roleStatus}\n                />\n                {/* Login page*/}\n                <PrivateLogin\n                  path=\"/login\"\n                  exact\n                  component={Home}\n                  auth={loginStatus}\n                  role={roleStatus}\n                />\n                {/* Delivery man */}\n                <PrivateRoute\n                  path=\"/delivery\"\n                  component={DeliveryDashBoard}\n                  auth={loginStatus}\n                />\n                {/* Scan QR code page */}\n                <Route path=\"/qr/:pro_id\" component={QrCode}  />\n\n                <Layout>\n                  <Sider\n                    theme=\"light\"\n                    style={{ minHeight: \"100vh\" }}\n                    collapsible\n                    collapsed={collapsed}\n                    onCollapse={handleCollapse}\n                    breakpoint=\"lg\"\n                    theme=\"light\"\n                  >\n                    <NavBar title={title} setTitle={setTitle} />\n                  </Sider>\n\n                  <Layout style={{ background: \"F2F3F6\" }}>\n                    <HeaderBar title={title} />\n\n                    <Content>\n                      {/* anything under switch will stop if first path match in */}\n                      {/* <Route path=\"/\" exact component={Home} /> */}\n                      <Switch>\n                        <PrivateRoute\n                          path=\"/dashboard\"\n                          component={() => <DashBoard title={title} />}\n                          auth={loginStatus}\n                          // render={() => <DashBoard title={title} />}\n                          title={title}\n                          exact\n                        />\n                        <PrivateRoute path=\"/products\" component={Products} auth={loginStatus}/>\n                        <PrivateRoute\n                          path=\"/reportDelivery\"\n                          component={ReportDelivery}\n                          auth={loginStatus}\n                        />\n\n                        <PrivateRoute\n                          path=\"/reportShop\"\n                          component={ReportShop}\n                          auth={loginStatus}\n                        />\n                        {/* List & Shop */}\n                        <PrivateRoute\n                          path=\"/listAndShop\"\n                          component={ContentList}\n                          auth={loginStatus}\n                        />\n                        {/* <Route path=\"/users\" component={Users} /> */}\n                        <PrivateRoute\n                          path=\"/users\"\n                          component={Users}\n                          auth={loginStatus}\n                        />\n                        <Redirect from=\"*\" to=\"/\" />\n\n                      </Switch>\n                     \n                    </Content>      \n                       \n                  </Layout>\n                </Layout>\n                  \n              </Switch>\n              \n            </div>\n          </Router>\n        </UsernameContext.Provider>\n      </RoleContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}